{"version":3,"sources":["webpack:///./src/app/index/index.component.html","webpack:///./src/app/index/index.component.scss","webpack:///./src/app/index/index.component.ts","webpack:///./src/app/product/best-product/best-product.component.html","webpack:///./src/app/product/best-product/best-product.component.scss","webpack:///./src/app/product/best-product/best-product.component.ts","webpack:///./src/app/product/product-detail/product-detail.component.html","webpack:///./src/app/product/product-detail/product-detail.component.scss","webpack:///./src/app/product/product-detail/product-detail.component.ts","webpack:///./src/app/product/product-list/product-list.component.html","webpack:///./src/app/product/product-list/product-list.component.scss","webpack:///./src/app/product/product-list/product-list.component.ts","webpack:///./src/app/product/product-qna-detail/product-qna-detail.component.css","webpack:///./src/app/product/product-qna-detail/product-qna-detail.component.html","webpack:///./src/app/product/product-qna-detail/product-qna-detail.component.ts","webpack:///./src/app/product/product-qna-update/product-qna-update.component.css","webpack:///./src/app/product/product-qna-update/product-qna-update.component.html","webpack:///./src/app/product/product-qna-update/product-qna-update.component.ts","webpack:///./src/app/product/product-qna-write/product-qna-write.component.css","webpack:///./src/app/product/product-qna-write/product-qna-write.component.html","webpack:///./src/app/product/product-qna-write/product-qna-write.component.ts","webpack:///./src/app/product/product-qna/product-qna.component.css","webpack:///./src/app/product/product-qna/product-qna.component.html","webpack:///./src/app/product/product-qna/product-qna.component.ts","webpack:///./src/app/product/product-review-detail/product-review-detail.component.css","webpack:///./src/app/product/product-review-detail/product-review-detail.component.html","webpack:///./src/app/product/product-review-detail/product-review-detail.component.ts","webpack:///./src/app/product/product-review-update/product-review-update.component.css","webpack:///./src/app/product/product-review-update/product-review-update.component.html","webpack:///./src/app/product/product-review-update/product-review-update.component.ts","webpack:///./src/app/product/product-review-write/product-review-write.component.css","webpack:///./src/app/product/product-review-write/product-review-write.component.html","webpack:///./src/app/product/product-review-write/product-review-write.component.ts","webpack:///./src/app/product/product-review/product-review.component.css","webpack:///./src/app/product/product-review/product-review.component.html","webpack:///./src/app/product/product-review/product-review.component.ts","webpack:///./src/app/product/product.component.html","webpack:///./src/app/product/product.component.scss","webpack:///./src/app/product/product.component.ts","webpack:///./src/app/product/product.module.ts","webpack:///./src/app/product/product.routing.ts","webpack:///./src/app/shared/models/cart.ts","webpack:///./src/app/shared/models/product.ts","webpack:///./src/app/shared/models/productQna.ts","webpack:///./src/app/shared/models/review.ts","webpack:///./src/app/shared/services/product-qna.service.ts","webpack:///./src/app/shared/services/review.service.ts"],"names":[],"mappings":"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","file":"index-index-module~notice-notice-module~product-product-module.js","sourcesContent":["module.exports = \"<!-- Carousel -->\\r\\n<div class=\\\"container\\\">\\r\\n  <div class=\\\"owl-carousel banner owl-theme\\\">\\r\\n    <div class=\\\"item\\\">\\r\\n      <img class=\\\"d-block w-100\\\" src=\\\"../../assets/img/banner_1.jpg\\\" alt=\\\"First slide\\\">\\r\\n    </div>\\r\\n    <div class=\\\"item\\\">\\r\\n      <img class=\\\"d-block w-100\\\" src=\\\"../../assets/img/banner_2.jpg\\\" alt=\\\"Second slide\\\">\\r\\n    </div>\\r\\n    <div class=\\\"item\\\">\\r\\n      <img class=\\\"d-block w-100\\\" src=\\\"../../assets/img/banner_3.jpg\\\" alt=\\\"Third slide\\\">\\r\\n    </div>\\r\\n    <div class=\\\"item\\\">\\r\\n      <img class=\\\"d-block w-100\\\" src=\\\"../../assets/img/banner_4.jpg\\\" alt=\\\"Fourth slide\\\">\\r\\n    </div>\\r\\n  </div>\\r\\n  <app-best-product></app-best-product>\\r\\n</div>\\r\\n\"","module.exports = \"\"","import { Component, OnInit } from \"@angular/core\";\r\nimport { UserService } from \"../shared/services/user.service\"\r\ndeclare var $: any;\r\n\r\n@Component({\r\n  selector: \"app-index\",\r\n  templateUrl: \"./index.component.html\",\r\n  styleUrls: [\"./index.component.scss\"]\r\n})\r\nexport class IndexComponent implements OnInit {\r\n  constructor(private userService:UserService) {\r\n    console.log(userService.loginUser.uid);\r\n    console.log(userService.loginUser.uname);\r\n    console.log(userService.loginUser.uaddr1);\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    $(document).ready(function() {\r\n      $(\".banner\").owlCarousel({\r\n        autoHeight: true,\r\n        center: true,\r\n        nav: true,\r\n        items: 1,\r\n        margin: 30,\r\n        loop: false,\r\n        autoplay: true,\r\n        autoplayTimeout: 3000,\r\n        autoplayHoverPause: true\r\n      });\r\n    });\r\n  }\r\n}\r\n","module.exports = \"<!--Section: Products v.2-->\\r\\n<section class=\\\"section pb-3\\\">\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-6\\\">\\r\\n      <blockquote class=\\\"blockquote float-left bq-primary\\\">\\r\\n        <h3 class=\\\"bq-title\\\">Our Best Products</h3>\\r\\n      </blockquote>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-6\\\">\\r\\n      <a class=\\\"btn btn-default font-weight-bold float-right\\\" [routerLink]=\\\"[ '/products/all-products' ]\\\">View All</a>\\r\\n    </div>\\r\\n  </div>\\r\\n  <owl-carousel [options]=\\\"options\\\" [items]=\\\"productList\\\" [carouselClasses]=\\\"['owl-theme', 'row', 'sliding']\\\">\\r\\n    <!--First column-->\\r\\n    <div class=\\\"item\\\" style=\\\"padding:20px\\\" *ngFor=\\\"let product of productList; let i = index\\\">\\r\\n      <div class=\\\" mb-r\\\">\\r\\n\\r\\n        <!--Card-->\\r\\n        <div class=\\\"card card-cascade wider\\\">\\r\\n\\r\\n          <!--Card image-->\\r\\n          <a [routerLink]=\\\"['/products/product', product.p_code]\\\" routerLinkActive=\\\"router-link-active\\\"\\r\\n              (click)=\\\"setProductCode(product.p_code)\\\">\\r\\n            <div class=\\\"view overlay hm-white-slight\\\">\\r\\n              <img src=\\\"./assets/img/{{product.p_img}}.jpg\\\" class=\\\"img-fluid\\\" alt=\\\"\\\">\\r\\n              <a>\\r\\n                <div class=\\\"mask waves-effect waves-light\\\" mdbRippleRadius></div>\\r\\n              </a>\\r\\n            </div>\\r\\n          </a>\\r\\n        </div>\\r\\n        <!--/.Card-->\\r\\n      </div>\\r\\n      <!--/First column-->\\r\\n    </div>\\r\\n  </owl-carousel>\\r\\n</section>\\r\\n<!--Section: Products v.2-->\\r\\n\"","module.exports = \".section .section-heading {\\n  margin-top: 2rem;\\n  margin-bottom: 4rem; }\\n\\n.section-heading {\\n  text-align: center; }\\n\\n.section-description {\\n  margin-left: 5%;\\n  margin-right: 5%; }\\n\\n.section-description {\\n  color: #757575;\\n  margin-bottom: 4rem;\\n  margin-left: 15%;\\n  margin-right: 15%;\\n  text-align: center; }\\n\\n.section img {\\n  max-width: 100%;\\n  height: auto; }\\n\\n.card.card-cascade.narrower {\\n  margin-top: 20px; }\\n\\n.card.card-cascade {\\n  width: 100%; }\\n\\n.card:not([class*=\\\"card-outline-\\\"]) {\\n  border: 0; }\\n\\n.card.card-cascade.narrower .view {\\n  margin-left: 4%;\\n  margin-right: 4%;\\n  margin-top: -20px; }\\n\\n.card.card-cascade .view {\\n  border-radius: 4px; }\\n\\n.btn-floating:hover,\\n.card-overlay,\\n.card.card-cascade .view,\\n.colorful-select .dropdown-content li a:hover,\\n.colorful-select .dropdown-content li span:hover,\\n.comments-list img,\\n.modal-dialog.cascading-modal.modal-avatar .modal-header img,\\n.reply-form img,\\n.testimonial-carousel .testimonial .avatar img,\\n.z-depth-2 {\\n  box-shadow: 0 8px 17px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19); }\\n\\n.card.card-cascade .card-body {\\n  padding-top: 1.8rem; }\\n\\n.btn .fa,\\n.card .card-body {\\n  position: relative; }\\n\\n.card .rating {\\n  color: #ffa000; }\\n\\n.rating {\\n  list-style-type: none; }\\n\\n.no-padding .fa,\\n.rating {\\n  padding: 0; }\\n\\n.rating li {\\n  display: inline-block; }\\n\\n.no-padding .fa,\\n.rating {\\n  padding: 0; }\\n\\n.card-text {\\n  line-height: 20px;\\n  height: 60px;\\n  overflow: hidden; }\\n\\n.card .card-footer {\\n  background-color: transparent; }\\n\\n.card .card-footer .left {\\n  float: left; }\\n\\n.card .card-footer .right {\\n  float: right;\\n  display: flex; }\\n\\n.card .card-footer .right a.active {\\n  color: #d50000; }\\n\\n.card .card-footer .right a {\\n  color: #757575;\\n  margin-left: 1rem;\\n  transition: 0.4s; }\\n\"","import { Component, OnInit } from \"@angular/core\";\r\nimport { Product } from \"../../shared/models/product\";\r\nimport { ProductService } from \"../../shared/services/product.service\";\r\nimport { TokenService } from \"../../shared/services/token.service\";\r\ndeclare var $: any;\r\n\r\n@Component({\r\n  selector: \"app-best-product\",\r\n  templateUrl: \"./best-product.component.html\",\r\n  styleUrls: [\"./best-product.component.scss\"]\r\n})\r\nexport class BestProductComponent implements OnInit {\r\n  bestProducts: Product[] = [];\r\n  productList: Product[];\r\n  p_code: string;\r\n  options: any;\r\n  constructor(\r\n    private productService: ProductService,\r\n    private tokenService: TokenService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.options = {\r\n      dots: false,\r\n      responsive: {\r\n        \"0\": { items: 1, margin: 5 },\r\n        \"430\": { items: 2, margin: 5 },\r\n        \"550\": { items: 3, margin: 5 },\r\n        \"670\": { items: 4, margin: 5 }\r\n      },\r\n      autoplay: true,\r\n      loop: true,\r\n      autoplayTimeout: 3000,\r\n      lazyLoad: true\r\n    };\r\n    this.getAllProducts();\r\n  }\r\n\r\n  getAllProducts() {\r\n    if(this.tokenService.isToken(\"productListToken\")){\r\n      this.productList = this.tokenService.getToken(\"productListToken\");\r\n    }else{\r\n\r\n      this.productService.getProducts()\r\n      .subscribe((productList : Product[]) => {\r\n        this.tokenService.saveToken(\"productListToken\" , productList );\r\n        this.productList = productList;\r\n      })\r\n    }\r\n  }\r\n\r\n  setProductCode(p_code: string) {\r\n     this.productService.setProductCode(p_code);\r\n     if(this.tokenService.isToken(\"pcodeToken\")){\r\n       this.tokenService.removeToken(\"pcodeToken\");\r\n     }\r\n     this.tokenService.saveToken(\"pcodeToken\", p_code);\r\n     this.p_code = p_code;\r\n  }\r\n}\r\n","module.exports = \"<br>\\r\\n<div class=\\\"container\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-4\\\">\\r\\n      <div class=\\\"product-image\\\">\\r\\n        <div class=\\\"view hm-zoom z-depth-2\\\" style=\\\"cursor: pointer\\\">\\r\\n          <img src=\\\"./assets/img/{{product.p_img}}.jpg\\\" [alt]=\\\"product.p_name\\\" width=\\\"100%\\\" class=\\\"img-fluid rounded\\\">\\r\\n\\r\\n        </div>\\r\\n        <div class=\\\"z-depth-1\\\" style=\\\"margin-top:15px\\\">\\r\\n          <ul class=\\\"list-group\\\">\\r\\n            <li class=\\\"list-group-item font-weight-bold\\\"> 상품 가격:\\r\\n              <span style=\\\"margin-left:15px; color:crimson\\\">\\r\\n                <i class=\\\"fa fa-inr\\\" aria-hidden=\\\"true\\\"></i> {{product.p_sellPrice}}</span>\\r\\n            </li>\\r\\n            <li class=\\\"list-group-item font-weight-bold\\\"> 상품 판매자:\\r\\n              <span style=\\\"margin-left:15px; color:darkblue\\\">\\r\\n                <i class=\\\"fa fa-building\\\" aria-hidden=\\\"true\\\"></i> 토마토마 </span>\\r\\n            </li>\\r\\n          </ul>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-7\\\">\\r\\n      <div class=\\\"product-detail z-depth-1\\\">\\r\\n        <h5 class=\\\"product-head font-weight-bold\\\">상품 상세 정보</h5>\\r\\n        <table class=\\\"table\\\" cellspacing=\\\"0\\\" style=\\\"max-height: 28px\\\">\\r\\n          <tbody>\\r\\n            <tr>\\r\\n              <th scope=\\\"row\\\" class=\\\"font-weight-bold\\\">상품 이름</th>\\r\\n              <td>{{product.p_name}}</td>\\r\\n            </tr>\\r\\n            <tr>\\r\\n              <th scope=\\\"row\\\" class=\\\"font-weight-bold\\\">상품 설명</th>\\r\\n              <td>{{product.p_content}}</td>\\r\\n            </tr>\\r\\n            <tr>\\r\\n              <th scope=\\\"row\\\" class=\\\"font-weight-bold\\\">상품 카테고리</th>\\r\\n              <td>{{product.p_kind}}</td>\\r\\n            </tr>\\r\\n            <tr>\\r\\n              <th scope=\\\"row\\\" class=\\\"font-weight-bold\\\">구입할 수량</th>\\r\\n              <td><input [(ngModel)]='pQuantity' />\\r\\n                <button (click)='pQuantityUp()'><i class=\\\"fa fa-plus\\\" aria-hidden=\\\"true\\\"></i></button>\\r\\n                <button (click)='pQuantityDown()'><i class=\\\"fa fa-minus\\\" aria-hidden=\\\"true\\\"></i></button>\\r\\n              </td>\\r\\n            </tr>\\r\\n            <!-- <tr>\\r\\n              <th scope=\\\"row\\\">상품 추가 날짜</th>\\r\\n              <td>{{product.productAdded * 1000 | date}}</td>\\r\\n            </tr> -->\\r\\n          </tbody>\\r\\n        </table>\\r\\n      </div>\\r\\n\\r\\n        <li>\\r\\n         <span>\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-outline-warning waves-effect font-weight-bold\\\"\\r\\n              (click)=\\\"addToCart()\\\">장바구니담기</button>\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-warning font-weight-bold\\\" (click)=\\\"gotoOrderWirte()\\\">구매하기</button>\\r\\n          </span>\\r\\n        </li>\\r\\n\\r\\n    </div>\\r\\n\\r\\n\\r\\n    <div class=\\\"col-sm-2\\\">\\r\\n      <!-- <div class=\\\"product-ship border border-dark\\\"></div> -->\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<br>\\r\\n<app-product-review></app-product-review>\\r\\n<br>\\r\\n<app-product-qna></app-product-qna>\\r\\n\"","module.exports = \".product-detail .product-head {\\n  padding: 10px;\\n  font-weight: 500; }\\n\\n.product-detail .table th {\\n  width: 152px; }\\n\\n.product-ship {\\n  height: 15rem; }\\n\\nli {\\n  list-style: none; }\\n\"","import { Component, OnInit, OnDestroy } from \"@angular/core\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { Product } from \"../../shared/models/product\";\r\nimport { ProductService } from \"../../shared/services/product.service\";\r\nimport { LoaderSpinnerService } from \"../../shared/loader-spinner/loader-spinner\";\r\nimport { TokenService } from \"../../shared/services/token.service\";\r\n\r\nimport { Cart } from \"../../shared/models/cart\";\r\nimport { AuthService } from \"../../shared/services/auth.service\";\r\nimport { Router } from '@angular/router';\r\n@Component({\r\n  selector: \"app-product-detail\",\r\n  templateUrl: \"./product-detail.component.html\",\r\n  styleUrls: [\"./product-detail.component.scss\"]\r\n})\r\nexport class ProductDetailComponent implements OnInit {\r\n  private sub: any;\r\n  product: Product;\r\n  productList: Product[];\r\n  p_code: string;\r\n\r\n  cart: Cart;\r\n  carts: Cart[] = [];\r\n  pQuantity: number = 1;\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private productService: ProductService,\r\n    private spinnerService: LoaderSpinnerService,\r\n    private authService: AuthService,\r\n    private router: Router,\r\n    private tokenService: TokenService\r\n  ) {\r\n    this.product = new Product();\r\n\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    // this.sub = this.route.params.subscribe(params => {\r\n    //   const id = params[\"id\"]; // (+) converts string 'id' to a number\r\n    //   this.getProductDetail(id);\r\n    // });\r\n\r\n        // if(this.tokenService.isToken(\"pcodeToken\")){\r\n        //   this.p_code = this.tokenService.getToken(\"pcodeToken\");\r\n        // }else{\r\n        //\r\n        // }\r\n\r\n        this.p_code = this.tokenService.getToken(\"p_code\");\r\n\r\n        this.productService.getProductById(this.p_code)\r\n        .subscribe((product: Product) => {\r\n        this.product = product;\r\n          this.tokenService.removeToken(\"p_code\");\r\n          this.tokenService.saveToken(\"p_code\",this.product.p_code);\r\n\r\n        });\r\n\r\n        // alert(this.tokenService.getToken(\"p_code\"));\r\n\r\n    }\r\n\r\n\r\n\r\n    // getOneProductFromToken(p_code){\r\n    //   var result = this.tokenService.getToken(\"productListToken\").find(function (item) {\r\n    //       return item.p_code === p_code;\r\n    //   });\r\n    // }\r\n\r\n\r\n\r\n\r\n\r\n  setProductCode(p_code: string) {\r\n    this.productService.setProductCode(p_code);\r\n  }\r\n\r\n\r\n\r\n\r\n  getProductDetail(p_code: string) {\r\n    // this.spinnerService.show();\r\n    // const x = this.productService.getProductById(p_code);\r\n    // x.snapshotChanges().subscribe(product => {\r\n    //   this.spinnerService.hide();\r\n    //   const y = product.payload.toJSON() as Product;\r\n    //\r\n    //   y[\"$key\"] = id;\r\n    //   this.product = y;\r\n    // });\r\n  }\r\n\r\n  addToCart() {\r\n    if(this.authService.getLoggedInUser()==null){\r\n      alert('로그인 후 이용해주세요.');\r\n      this.router.navigate(['/index/login']);\r\n      return;\r\n    }\r\n    this.cart = new Cart();\r\n    this.cart.uid = this.authService.getLoggedInUser().uid;\r\n    this.cart.pcode = this.product.p_code;\r\n    this.cart.camount = this.pQuantity;\r\n    this.productService.addToCart(this.cart).subscribe((cart: Cart) => {\r\n      this.cart = cart;\r\n      alert('장바구니에 담았습니다.');\r\n    });\r\n  }\r\n\r\n  gotoOrderWirte(){\r\n    if(this.authService.getLoggedInUser()==null){\r\n      alert('로그인 후 이용해주세요.');\r\n      this.router.navigate(['/index/login']);\r\n      return;\r\n    }\r\n    this.cart=new Cart();\r\n    this.cart.uid=this.authService.getLoggedInUser().uid;\r\n    this.cart.pcode=this.product.p_code;\r\n    this.cart.camount=this.pQuantity;\r\n    this.cart.p_img=this.product.p_img;\r\n    this.cart.p_sellprice=this.product.p_sellPrice;\r\n    this.cart.p_name=this.product.p_name;\r\n    this.cart.p_kind=this.product.p_kind;\r\n    this.cart.p_content=this.product.p_content;\r\n\r\n    if(this.tokenService.isToken('OWCart')){\r\n      this.tokenService.updateToken('OWcart',this.cart);\r\n    }else{\r\n      this.tokenService.saveToken('OWcart',this.cart);\r\n    }\r\n    if(this.tokenService.isToken('fromCart')){\r\n      this.tokenService.updateToken('fromCart',false);\r\n    }else{\r\n      this.tokenService.saveToken('fromCart',false);\r\n    }\r\n\r\n    //this.productService.cart=this.cart;\r\n    //this.productService.fromCart=false;\r\n    console.log(this.cart);\r\n    this.router.navigate([\"/users\", { outlets: { profileOutlet: ['order-write'] } }]);\r\n  }\r\n\r\n  pQuantityUp() {\r\n    ++this.pQuantity;\r\n  }\r\n\r\n  pQuantityDown() {\r\n    if (this.pQuantity > 1)\r\n      --this.pQuantity;\r\n    else\r\n      alert('더 이상 줄일 수 없습니다.');\r\n  }\r\n}\r\n","module.exports = \"<br>\\r\\n<div class=\\\"container\\\">\\r\\n  <!-- <div class=\\\"row\\\" *ngIf=\\\"authService.isAdmin()\\\">\\r\\n    <div class=\\\"col-sm\\\">\\r\\n      <div class=\\\"float-right\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary waves-light\\\" data-toggle=\\\"modal\\\" data-target=\\\"#exampleModalLong\\\">\\r\\n          Add Product\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div> -->\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-3\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"kind_select\\\">카테고리별 조회 :</label>\\r\\n        <select class=\\\"form-control\\\" name=\\\"\\\" id=\\\"kind_select\\\" [(ngModel)]=\\\"selectedKind\\\">\\r\\n          <option *ngFor=\\\"let kind of kinds\\\">{{kind}}</option>\\r\\n        </select>\\r\\n      </div>\\r\\n      <ul class=\\\"list-group font-weight-bold\\\">\\r\\n        <li class=\\\"list-group-item\\\">오늘 날짜 : {{ currentDate | date }}</li>\\r\\n      </ul>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-9\\\">\\r\\n      <div class=\\\"container\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n          <!-- List of Products -->\\r\\n          <div class=\\\"col-sm-4 mb-2\\\" *ngFor=\\\"let product of productList | filterByKind: selectedKind | paginate: { itemsPerPage: 6, currentPage: page }\\\">\\r\\n            <div class=\\\"item\\\">\\r\\n              <div class=\\\" mb-r\\\">\\r\\n                <!--Card-->\\r\\n                <div class=\\\"card card-cascade wider\\\">\\r\\n\\r\\n                  <div class=\\\"card-body text-center no-padding\\\">\\r\\n                    <!--Category & Title-->\\r\\n                    <a class=\\\"text-muted\\\">\\r\\n\\r\\n\\r\\n\\r\\n                      <div>\\r\\n\\r\\n                        <a [routerLink]=\\\"['/products/product', product.p_code]\\\" routerLinkActive=\\\"router-link-active\\\" (click)=\\\"setProductCode(product.p_code)\\\">\\r\\n                              <img src=\\\"./assets/img/{{product.p_img}}.jpg\\\" class=\\\"product_image\\\" width=\\\"200px\\\" height=\\\"200px\\\"/>\\r\\n                        </a>\\r\\n                      </div>\\r\\n                    </a>\\r\\n                    <p class=\\\"card-title\\\">\\r\\n                      <strong>\\r\\n                        <a [routerLink]=\\\"['/products/product', product.p_code]\\\" routerLinkActive=\\\"router-link-active\\\" (click)=\\\"setProductCode(product.p_code)\\\">{{ product.p_name }}</a>\\r\\n                      </strong>\\r\\n                    </p>\\r\\n                    <!--Description-->\\r\\n                    <p class=\\\"card-text\\\">{{ product.p_content }}\\r\\n                    </p>\\r\\n                    <!--Card footer-->\\r\\n                    <div class=\\\"card-footer\\\">\\r\\n                      <span class=\\\"left\\\">{{ product.p_sellPrice}}원</span>\\r\\n                      <span class=\\\"right\\\">\\r\\n                        <a placement=\\\"top\\\" mdbTooltip=\\\"Quick Look\\\" container=\\\"body\\\" [routerLink]=\\\"['/products/product', product.p_code]\\\">\\r\\n                          <i class=\\\"fa fa-eye\\\"></i>\\r\\n                        </a>\\r\\n                        <a placement=\\\"top\\\" mdbTooltip=\\\"Add to Cart\\\" container=\\\"body\\\" (click)=\\\"addToCart(product)\\\">\\r\\n                          <i class=\\\"fa fa-shopping-cart\\\"></i>\\r\\n                        </a>\\r\\n                        <!-- <a placement=\\\"top\\\" mdbTooltip=\\\"Remove Product\\\" container=\\\"body\\\" *ngIf=\\\"authService.isAdmin()\\\" (click)=\\\"removeProduct(product.$key)\\\">\\r\\n                          <i class=\\\"fa fa-trash\\\"></i>\\r\\n                        </a> -->\\r\\n                      </span>\\r\\n                    </div>\\r\\n\\r\\n                  </div>\\r\\n                  <!--/.Card content-->\\r\\n\\r\\n                </div>\\r\\n                <!--/.Card-->\\r\\n\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <!-- Pagination -->\\r\\n        <div class=\\\"text-center mt-3\\\">\\r\\n          <pagination-controls (pageChange)=\\\"page = $event\\\"></pagination-controls>\\r\\n        </div>\\r\\n      </div>\\r\\n      <!--/.Card-->\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<ng2-toasty></ng2-toasty>\\r\\n\"","module.exports = \".section .section-heading {\\n  margin-top: 2rem;\\n  margin-bottom: 4rem; }\\n\\n.section-heading {\\n  text-align: center; }\\n\\n.section-description {\\n  margin-left: 5%;\\n  margin-right: 5%; }\\n\\n.section-description {\\n  color: #757575;\\n  margin-bottom: 4rem;\\n  margin-left: 15%;\\n  margin-right: 15%;\\n  text-align: center; }\\n\\n.section img {\\n  max-width: 100%;\\n  height: auto; }\\n\\n.card.card-cascade.narrower {\\n  margin-top: 10px; }\\n\\n.card.card-cascade {\\n  width: 100%; }\\n\\n.card:not([class*=\\\"card-outline-\\\"]) {\\n  border: 0; }\\n\\n.card.card-cascade.narrower .view {\\n  margin-left: 4%;\\n  margin-right: 4%;\\n  margin-top: -20px; }\\n\\n.card.card-cascade .view {\\n  border-radius: 4px; }\\n\\n.btn-floating:hover,\\n.card-overlay,\\n.card.card-cascade .view,\\n.colorful-select .dropdown-content li a:hover,\\n.colorful-select .dropdown-content li span:hover,\\n.comments-list img,\\n.modal-dialog.cascading-modal.modal-avatar .modal-header img,\\n.reply-form img,\\n.testimonial-carousel .testimonial .avatar img,\\n.z-depth-2 {\\n  box-shadow: 0 8px 17px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19); }\\n\\n.card.card-cascade .card-body {\\n  padding-top: 1.8rem; }\\n\\n.btn .fa,\\n.card .card-body {\\n  position: relative; }\\n\\n.card .rating {\\n  color: #ffa000; }\\n\\n.rating {\\n  list-style-type: none; }\\n\\n.no-padding .fa,\\n.rating {\\n  padding: 0; }\\n\\n.rating li {\\n  display: inline-block; }\\n\\n.no-padding .fa,\\n.rating {\\n  padding: 0; }\\n\\n.card-text {\\n  line-height: 20px;\\n  height: 60px;\\n  overflow: hidden; }\\n\\n.card .card-footer {\\n  background-color: transparent; }\\n\\n.card .card-footer .left {\\n  float: left; }\\n\\n.card .card-footer .right {\\n  float: right;\\n  display: flex; }\\n\\n.card .card-footer .right a.active {\\n  color: #d50000; }\\n\\n.card .card-footer .right a {\\n  color: #757575;\\n  margin-left: 1rem;\\n  transition: 0.4s; }\\n\\n.card .card-footer .right a .fa-heart {\\n  color: #3f51b5; }\\n\"","import { Component, OnInit } from \"@angular/core\";\r\nimport { ToastyConfig, ToastOptions, ToastyService } from \"ng2-toasty\";\r\nimport { Product } from \"../../shared/models/product\";\r\nimport { AuthService } from \"../../shared/services/auth.service\";\r\nimport { ProductService } from \"../../shared/services/product.service\";\r\nimport { LoaderSpinnerService } from \"../../shared/loader-spinner/loader-spinner\";\r\nimport { TokenService } from \"../../shared/services/token.service\";\r\n\r\n//**동현\r\nimport { Router } from '@angular/router';\r\nimport {Cart} from \"../../shared/models/cart\";\r\n@Component({\r\n  selector: \"app-product-list\",\r\n  templateUrl: \"./product-list.component.html\",\r\n  styleUrls: [\"./product-list.component.scss\"]\r\n})\r\nexport class ProductListComponent implements OnInit {\r\n  currentDate = new Date();\r\n  productList: Product[];\r\n\r\n  kinds = [\"All\", \"Bakery\", \"Sauce\", \"Drink\", \"Instant\",\"Snack\"];\r\n  selectedKind = \"All\";\r\n\r\n  page = 1;\r\n\r\n  //** 동현 변수\r\n  cart:Cart=new Cart();\r\n  // 동현 변수끝\r\n  constructor(\r\n    private authService: AuthService,\r\n    private productService: ProductService,\r\n    private spinnerService: LoaderSpinnerService,\r\n    private toastyConfig: ToastyConfig,\r\n    private toastyService: ToastyService,\r\n    private tokenService: TokenService,\r\n    private router:Router\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n\r\n    this.productService.getProducts()\r\n    .subscribe((productList : Product[]) => {\r\n    this.productList = productList;\r\n      })\r\n\r\n\r\n\r\n  }\r\n\r\n  p_code : string;\r\n\r\n  setProductCode(p_code: string) {\r\n     this.productService.setProductCode(p_code);\r\n     if(this.tokenService.isToken(\"p_code\")){\r\n       this.tokenService.removeToken(\"p_code\");\r\n     }\r\n     this.tokenService.saveToken(\"p_code\", p_code);\r\n     this.p_code = p_code;\r\n  }\r\n\r\n\r\n\r\n  getProductByKind(p_kind: string) {\r\n\r\n     this.productService.getProductByKind(this.selectedKind)\r\n     .subscribe((productList : Product[]) => {\r\n       this.productList = productList;\r\n     })\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n  removeProduct(key: string) {\r\n    this.productService.deleteProduct(key);\r\n  }\r\n\r\n  addFavourite(product: Product) {\r\n    this.productService.addFavouriteProduct(product);\r\n  }\r\n\r\n  //동현 장바구니에 물품추가기능\r\n  addToCart(product: Product) {\r\n  if(this.authService.getLoggedInUser()==null){\r\n    alert('로그인 후 이용해주세요.');\r\n    this.router.navigate(['/index/login']);\r\n    return;\r\n  }\r\n  this.cart.uid=this.authService.getLoggedInUser().uid;\r\n this.cart.pcode=product.p_code;\r\n this.cart.camount=1;\r\n this.cart.p_img=product.p_img;\r\n this.cart.p_sellprice=product.p_sellPrice;\r\n this.cart.p_name=product.p_name;\r\n this.cart.p_kind=product.p_kind;\r\n this.cart.p_content=product.p_content;\r\n this.productService.addToCart(this.cart).subscribe((cart: Cart)=>{\r\n  alert('장바구니에 담았습니다.');\r\n  return;\r\n});\r\n\r\n}\r\n}\r\n","module.exports = \"\"","module.exports = \"<hr class=\\\"between-sections\\\">\\r\\n\\r\\n<div class=\\\"card card-cascade wider reverse\\\">\\r\\n\\r\\n  <!-- Card content -->\\r\\n  <div class=\\\"card-body card-body-cascade text-center\\\">\\r\\n\\r\\n    <!-- Title -->\\r\\n    <h4 class=\\\"card-title\\\"><strong>상품 문의</strong></h4>\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n\\r\\n<hr class=\\\"between-sections\\\">\\r\\n\\r\\n<ol class=\\\"breadcrumb\\\">\\r\\n  <li class=\\\"breadcrumb-item\\\">\\r\\n    <a [routerLink]=\\\"['/index']\\\">Home</a>\\r\\n  </li>\\r\\n  <li class=\\\"breadcrumb-item\\\">상품상세</li>\\r\\n  <li class=\\\"breadcrumb-item\\\">\\r\\n  상품문의\\r\\n    <!-- delete : (click)=\\\"removeToken()\\\" -->\\r\\n  </li>\\r\\n</ol>\\r\\n\\r\\n<!--Table-->\\r\\n<table class=\\\"table table-bordered\\\">\\r\\n\\r\\n  <!--Table body-->\\r\\n  <tbody>\\r\\n    <tr>\\r\\n      <th>제목</th>\\r\\n      <td colspan=\\\"3\\\">{{ productQna?.pq_title }}</td>\\r\\n    </tr>\\r\\n    <tr>\\r\\n      <th>작성자</th>\\r\\n      <td colspan=\\\"3\\\">{{ productQna?.u_id }}</td>\\r\\n    </tr>\\r\\n    <tr>\\r\\n      <th>작성일</th>\\r\\n      <td>{{ productQna?.pq_date | date:'yyyy-MM-dd' }}</td>\\r\\n      <th>조회수</th>\\r\\n      <td>{{ productQna?.pq_hits }}</td>\\r\\n    </tr>\\r\\n    <tr>\\r\\n      <td colspan=\\\"4\\\">\\r\\n        <pre>{{ productQna?.pq_content }}</pre>\\r\\n      </td>\\r\\n    </tr>\\r\\n    <tr *ngIf=\\\"replyyn !== 'n'\\\">\\r\\n      <th class=\\\"cyan lighten-4\\\">답변 내용</th>\\r\\n      <td colspan=\\\"3\\\">\\r\\n        <pre>\\r\\n          {{ productQna?.pq_reply }}\\r\\n        </pre>\\r\\n      </td>\\r\\n    </tr>\\r\\n  </tbody>\\r\\n  <!--Table body-->\\r\\n\\r\\n</table>\\r\\n<!--Table-->\\r\\n\\r\\n<button type=\\\"button\\\" class=\\\"btn btn-outline-danger waves-effect\\\" (click)=\\\"deleteProductQna()\\\">\\r\\n  삭제\\r\\n</button>\\r\\n\\r\\n<button type=\\\"button\\\" class=\\\"btn btn-outline-info waves-effect\\\" [routerLink]=\\\"['/products/product', productQna.p_code]\\\">목록\\r\\n  <!-- (click)=\\\"removeToken()\\\" -->\\r\\n</button>\\r\\n\\r\\n<button type=\\\"button\\\" class=\\\"btn btn-outline-info waves-effect\\\" id=\\\"pq_update_button\\\" [routerLink]=\\\"['/products/productqna/update']\\\" (click)=\\\"setProductQnaObject()\\\">수정</button>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { HttpClientModule, HttpHeaders, HttpClient } from '@angular/common/http';\r\n\r\nimport { ProductQnaService} from \"../../shared/services/product-qna.service\";\r\nimport { ProductQna} from \"../../shared/models/ProductQna\";\r\nimport { TokenService } from '../../shared/services/token.service';\r\nimport { Router } from '@angular/router';\r\n\r\n\r\n@Component({\r\n  selector: 'app-product-qna-detail',\r\n  templateUrl: './product-qna-detail.component.html',\r\n  styleUrls: ['./product-qna-detail.component.css']\r\n})\r\nexport class ProductQnaDetailComponent implements OnInit {\r\n\r\n  productQna : ProductQna ;\r\n\r\n  constructor(\r\n\r\n    private productQnaService : ProductQnaService,\r\n    private http : HttpClient,\r\n    private router: Router,\r\n    private tokenService : TokenService\r\n\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n\r\n    this.productQnaService.getProductQnaNoObject().subscribe((productQna: ProductQna)=>{\r\n    this.tokenService.saveToken(\"productQnaToken\", productQna);\r\n    this.productQna = productQna;\r\n    return this.productQna;\r\n    })\r\n  }\r\n\r\n\r\n  setProductQnaObject(){\r\n    this.productQna = this.tokenService.getToken(\"productQnaToken\");\r\n    this.productQnaService.setProductQnaObject(this.productQna);\r\n  }\r\n\r\n\r\n  deleteProductQna(productQna : ProductQna){\r\n\r\n    this.productQnaService.deleteProductQna(this.productQna)\r\n    .subscribe(()=>{\r\n      alert(\"고객님의 상품문의가 삭제되었습니다.\");\r\n      this.router.navigate(['/products/product', this.productQna.p_code]);\r\n    \r\n    })\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<hr class=\\\"between-sections\\\">\\r\\n\\r\\n<div class=\\\"card card-cascade wider reverse\\\">\\r\\n\\r\\n  <!-- Card content -->\\r\\n  <div class=\\\"card-body card-body-cascade text-center\\\">\\r\\n\\r\\n    <!-- Title -->\\r\\n    <h4 class=\\\"card-title\\\"><strong>상품 문의 수정</strong></h4>\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n\\r\\n<hr class=\\\"between-sections\\\">\\r\\n\\r\\n<!-- Default form contact -->\\r\\n<form name=\\\"updateForm\\\" #updateProductQnaForm=\\\"ngForm\\\" (ngSubmit)=\\\"updateProductQna(updateProductQnaForm)\\\">\\r\\n  <!--Table-->\\r\\n  <table class=\\\"table table-bordered\\\">\\r\\n    <!--Table body-->\\r\\n    <tbody>\\r\\n      <tr [hidden]=true>\\r\\n        <th>문의 번호</th>\\r\\n        <td>\\r\\n          <input type=\\\"number\\\" id=\\\"exampleForm2\\\" class=\\\"form-control\\\" required [(ngModel)]=\\\"productQna.pq_no\\\" [ngModelOptions]=\\\"{standalone: true}\\\" />\\r\\n        </td>\\r\\n      </tr>\\r\\n      <tr>\\r\\n        <th class=\\\"cyan lighten-4\\\">제목</th>\\r\\n        <td>\\r\\n          <input type=\\\"text\\\" id=\\\"exampleForm2\\\" class=\\\"form-control\\\" placeholder=\\\"제목을 입력해주세요.\\\"\\r\\n            required [(ngModel)]=\\\"productQna.pq_title\\\" [ngModelOptions]=\\\"{standalone: true}\\\" />\\r\\n        </td>\\r\\n      </tr>\\r\\n      <tr>\\r\\n        <th class=\\\"cyan lighten-4\\\">카테고리</th>\\r\\n        <td>\\r\\n          <input type=\\\"text\\\" id=\\\"exampleForm2\\\" class=\\\"form-control\\\" required [(ngModel)]=\\\"productQna.pq_category\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [disabled]=true/>\\r\\n        </td>\\r\\n      </tr>\\r\\n      <tr>\\r\\n        <th class=\\\"cyan lighten-4\\\">작성자 ID</th>\\r\\n        <td>\\r\\n          <input type=\\\"text\\\" id=\\\"exampleForm2\\\" class=\\\"form-control\\\" required [(ngModel)]=\\\"productQna.u_id\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [disabled]=true/>\\r\\n        </td>\\r\\n      </tr>\\r\\n      <tr>\\r\\n        <th class=\\\"cyan lighten-4\\\">후기 내용</th>\\r\\n        <td colspan=\\\"2\\\">\\r\\n          <textarea name=\\\"productQnaContent\\\" rows=\\\"8\\\" cols=\\\"150\\\" placeholder=\\\"내용을 입력해주세요.\\\" class=\\\"form-control\\\" required [(ngModel)]=\\\"productQna.pq_content\\\" [ngModelOptions]=\\\"{standalone: true}\\\"></textarea>\\r\\n        </td>\\r\\n      </tr>\\r\\n    </tbody>\\r\\n  </table>\\r\\n\\r\\n  <div class=\\\"text-center mt-4\\\">\\r\\n    <button type=\\\"submit\\\" class=\\\"btn btn-outline-danger waves-effect\\\">수정</button>\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-outline-info waves-effect\\\" [routerLink]=\\\"['/products/product', productQna.p_code]\\\">취소</button>\\r\\n  </div>\\r\\n</form>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { NgForm, FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\n\r\nimport { ProductQnaService } from '../../shared/services/product-qna.service';\r\nimport { ProductQna } from '../../shared/models/productQna';\r\n\r\n@Component({\r\n  selector: 'app-product-qna-update',\r\n  templateUrl: './product-qna-update.component.html',\r\n  styleUrls: ['./product-qna-update.component.css']\r\n})\r\nexport class ProductQnaUpdateComponent implements OnInit {\r\n\r\n  productQna : ProductQna;\r\n\r\n\r\n  constructor(\r\n\r\n    private productQnaService : ProductQnaService,\r\n    private router : Router\r\n\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n\r\n    this.productQna = this.productQnaService.getProductQnaObject();\r\n\r\n  }\r\n\r\n\r\n  updateProductQna(){\r\n\r\n      this.productQnaService.updateProductQna(this.productQna)\r\n      .subscribe(()=>{\r\n        alert(\"상품 문의가 수정되었습니다.\");\r\n        this.router.navigate(['/products/qna',this.productQna.pq_no]);\r\n      })\r\n  }\r\n\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<hr class=\\\"between-sections\\\">\\r\\n\\r\\n<div class=\\\"card card-cascade wider reverse\\\">\\r\\n\\r\\n  <!-- Card content -->\\r\\n  <div class=\\\"card-body card-body-cascade text-center\\\">\\r\\n\\r\\n    <!-- Title -->\\r\\n    <h4 class=\\\"card-title\\\"><strong>상품 문의 하기</strong></h4>\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n\\r\\n<hr class=\\\"between-sections\\\">\\r\\n\\r\\n<!-- Default form contact -->\\r\\n<form (ngSubmit)=\\\"insertProductQna()\\\">\\r\\n  <!--Table-->\\r\\n  <table class=\\\"table table-bordered\\\">\\r\\n\\r\\n    <tbody>\\r\\n      <tr>\\r\\n        <th>제목</th>\\r\\n        <td>\\r\\n          <input type=\\\"text\\\" id=\\\"exampleForm2\\\" class=\\\"form-control\\\" placeholder=\\\"제목을 입력해주세요.\\\" required [(ngModel)]=\\\"productQna.pq_title\\\" [ngModelOptions]=\\\"{standalone: true}\\\" />\\r\\n        </td>\\r\\n      </tr>\\r\\n      <tr [hidden]=true>\\r\\n        <th>작성자</th>\\r\\n        <td>\\r\\n          <input type=\\\"text\\\" id=\\\"exampleForm2\\\" class=\\\"form-control\\\" required [(ngModel)]=\\\"productQna.u_id\\\" [ngModelOptions]=\\\"{standalone: true}\\\" />\\r\\n        </td>\\r\\n      </tr>\\r\\n      <tr>\\r\\n        <th>카테고리</th>\\r\\n        <td>\\r\\n         <select (change)=\\\"getProductQnaByCategory($event.target.value)\\\">\\r\\n           <option value=\\\"\\\" disabled selected>카테고리를 선택해주세요</option>\\r\\n           <option *ngFor=\\\"let category of categoryList\\\" [value]=\\\"category\\\">\\r\\n             {{ category }}\\r\\n           </option>\\r\\n         </select>\\r\\n       </td>\\r\\n    </tr>\\r\\n\\r\\n      <tr>\\r\\n        <th colspan=\\\"1\\\">문의 내용</th>\\r\\n        <td colspan=\\\"2\\\">\\r\\n          <textarea name=\\\"qnaContent\\\" rows=\\\"8\\\" cols=\\\"150\\\" placeholder=\\\"내용을 입력해주세요.\\\" class=\\\"form-control\\\" required [(ngModel)]=\\\"productQna.pq_content\\\" [ngModelOptions]=\\\"{standalone: true}\\\"></textarea>\\r\\n        </td>\\r\\n      </tr>\\r\\n    </tbody>\\r\\n  </table>\\r\\n\\r\\n  <div class=\\\"text-center mt-4\\\" [hidden]=\\\"submit\\\">\\r\\n    <button type=\\\"submit\\\" class=\\\"btn btn-outline-danger waves-effect\\\">등록</button>\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-outline-info waves-effect\\\" [routerLink]=\\\"['/products/product', productQna.p_code]\\\">취소</button>\\r\\n  </div>\\r\\n</form>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { ProductQnaService } from '../../shared/services/product-qna.service';\r\nimport { ProductQna } from '../../shared/models/productQna';\r\nimport { AuthService } from '../../shared/services/auth.service';\r\nimport { ProductService } from \"../../shared/services/product.service\";\r\nimport { User } from '../../shared/models/user';\r\nimport { TokenService } from \"../../shared/services/token.service\";\r\n\r\n@Component({\r\n  selector: 'app-product-qna-write',\r\n  templateUrl: './product-qna-write.component.html',\r\n  styleUrls: ['./product-qna-write.component.css']\r\n})\r\nexport class ProductQnaWriteComponent implements OnInit {\r\n\r\n  submit = false;\r\n  productQna = new ProductQna;\r\n  pq_no : number;\r\n  p_code : string;\r\n\r\n  categoryList = [\"상품\",\"배송\"];\r\n\r\n  constructor(\r\n\r\n    private productQnaService : ProductQnaService,\r\n    private router : Router,\r\n    private authService : AuthService,\r\n    private productService : ProductService,\r\n    private tokenService: TokenService\r\n\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n\r\n    this.productQna.u_id = this.authService.getLoggedInUser().uid;\r\n    console.log(this.productQna.p_code);\r\n\r\n  }\r\n\r\n  getProductQnaByCategory(pq_category : string ){\r\n    this.productQna.pq_category = pq_category;\r\n  }\r\n\r\n\r\n  insertProductQna(){\r\n    this.productQna.p_code = this.tokenService.getToken(\"p_code\");\r\n    this.productQnaService.insertProductQna(this.productQna)\r\n    .subscribe(()=>\r\n  {\r\n    alert(\"질문이 등록되었습니다.\");\r\n    console.log(this.productQna.pq_category);\r\n    this.router.navigate(['/products/product', this.productQna.p_code]);\r\n  })\r\n  }\r\n\r\n  setProductCode(p_code: string) {\r\n\r\n    if(this.tokenService.isToken(\"p_code\")){\r\n      this.p_code = this.tokenService.getToken(\"p_code\");\r\n    }\r\n    console.log(p_code);\r\n  }\r\n\r\n\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<hr class=\\\"between-sections\\\">\\r\\n\\r\\n<ol class=\\\"breadcrumb font-weight-bold\\\">\\r\\n  <li>상품 문의</li>\\r\\n</ol>\\r\\n\\r\\n<table class=\\\"table table-responsive-md\\\">\\r\\n  <thead class=\\\"amber lighten-3\\\">\\r\\n  <tr>\\r\\n    <th>번호</th>\\r\\n    <th>카테고리</th>\\r\\n    <th>제목</th>\\r\\n    <th>작성자</th>\\r\\n    <th>작성일</th>\\r\\n    <th>조회</th>\\r\\n\\r\\n  </tr>\\r\\n  </thead>\\r\\n\\r\\n  <tbody>\\r\\n\\r\\n    <tr *ngFor=\\\"let productQna of productQnas | paginate: { itemsPerPage: 6, currentPage: page }; let i = index\\\">\\r\\n    <th>{{i+1}}</th>\\r\\n    <th>{{productQna.pq_category}}</th>\\r\\n    <th>\\r\\n      <a [routerLink]=\\\"['/products/qna',productQna.pq_no]\\\" routerLinkActive=\\\"router-link-active\\\"\\r\\n      (click)=\\\"setProductQnaNo(productQna.pq_no)\\\">\\r\\n      {{productQna.pq_title}}\\r\\n    </a>\\r\\n    </th>\\r\\n    <th>{{productQna.u_id}}</th>\\r\\n    <th>{{productQna.pq_date | date : 'yyyy-MM-dd'}}</th>\\r\\n    <th>{{productQna.pq_hits}}</th>\\r\\n\\r\\n    <!-- <p>{{productQna.pq_content}}</p> -->\\r\\n  </tr>\\r\\n\\r\\n  </tbody>\\r\\n\\r\\n  <div class=\\\"text-center mt-3\\\">\\r\\n    <pagination-controls (pageChange)=\\\"page = $event\\\"></pagination-controls>\\r\\n  </div>\\r\\n\\r\\n  <button type=\\\"button\\\" class=\\\"btn btn-outline-info waves-effect\\\" id=\\\"qna_button\\\"\\r\\n    [routerLink]=\\\"['/products/productqna/write']\\\">문의하기\\r\\n  </button>\\r\\n\\r\\n</table>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\nimport {ProductQnaService} from \"../../shared/services/product-qna.service\";\r\nimport {ProductQna} from \"../../shared/models/ProductQna\";\r\nimport {ProductService} from \"../../shared/services/product.service\";\r\nimport { TokenService } from \"../../shared/services/token.service\";\r\n\r\n\r\n@Component({\r\n  selector: 'app-product-qna',\r\n  templateUrl: './product-qna.component.html',\r\n  styleUrls: ['./product-qna.component.css']\r\n})\r\nexport class ProductQnaComponent implements OnInit {\r\n\r\n  page = 1;\r\n  productQnas : ProductQna[];\r\n  p_code : string;\r\n  pq_no : number;\r\n\r\n\r\n  constructor(\r\n    private productQnaService : ProductQnaService,\r\n    private productService : ProductService,\r\n    private tokenService: TokenService\r\n\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n\r\n\r\n      this.productService.getProductQna()\r\n      .subscribe((productQnas :ProductQna[] )=>\r\n    {\r\n        this.productQnas = productQnas;\r\n    })\r\n\r\n\r\n  }\r\n\r\n  setProductQnaNo(pq_no : number){\r\n    this.productQnaService.setProductQnaNo(pq_no);\r\n    this.setProductQnaNoObject(pq_no);\r\n  }\r\n\r\n\r\n  setProductQnaNoObject(pq_no: number) {\r\n    var productQna = this.productQnas.find(function (item){\r\n      return item.pq_no == pq_no;\r\n    });\r\n    this.productQnaService.setProductQnaNoObject(productQna);\r\n    // this.check(review);\r\n  }\r\n\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<hr class=\\\"between-sections\\\">\\r\\n\\r\\n<div class=\\\"card card-cascade wider reverse\\\">\\r\\n\\r\\n  <!-- Card content -->\\r\\n  <div class=\\\"card-body card-body-cascade text-center\\\">\\r\\n\\r\\n    <!-- Title -->\\r\\n    <h4 class=\\\"card-title\\\"><strong>상품 후기</strong></h4>\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n\\r\\n<hr class=\\\"between-sections\\\">\\r\\n\\r\\n<ol class=\\\"breadcrumb\\\">\\r\\n  <li class=\\\"breadcrumb-item\\\">\\r\\n    <a [routerLink]=\\\"['/index']\\\">Home</a>\\r\\n  </li>\\r\\n  <li class=\\\"breadcrumb-item\\\">상품상세</li>\\r\\n  <li class=\\\"breadcrumb-item\\\">\\r\\n  상품후기\\r\\n    <!-- delete : (click)=\\\"removeToken()\\\" -->\\r\\n  </li>\\r\\n</ol>\\r\\n\\r\\n<!--Table-->\\r\\n<table class=\\\"table table-bordered\\\">\\r\\n\\r\\n  <!--Table body-->\\r\\n  <tbody>\\r\\n    <tr>\\r\\n      <th>제목</th>\\r\\n      <td colspan=\\\"3\\\">{{ review?.rev_title }}</td>\\r\\n    </tr>\\r\\n    <tr>\\r\\n      <th>작성자</th>\\r\\n      <td colspan=\\\"3\\\">{{ review?.u_id }}</td>\\r\\n    </tr>\\r\\n    <tr>\\r\\n      <th>작성일</th>\\r\\n      <td>{{ review?.rev_date | date:'yyyy-MM-dd' }}</td>\\r\\n      <th>조회수</th>\\r\\n      <td>{{ review?.rev_hits }}</td>\\r\\n    </tr>\\r\\n    <tr>\\r\\n      <td colspan=\\\"4\\\">\\r\\n        <pre>{{ review?.rev_content }}</pre>\\r\\n      </td>\\r\\n    </tr>\\r\\n  </tbody>\\r\\n  <!--Table body-->\\r\\n\\r\\n</table>\\r\\n<!--Table-->\\r\\n\\r\\n<button type=\\\"button\\\" class=\\\"btn btn-outline-danger waves-effect\\\" (click)=\\\"deleteReview()\\\">\\r\\n  삭제\\r\\n</button>\\r\\n\\r\\n<button type=\\\"button\\\" class=\\\"btn btn-outline-info waves-effect\\\" [routerLink]=\\\"['/products/product', review.p_code]\\\">목록\\r\\n  <!-- (click)=\\\"removeToken()\\\" -->\\r\\n</button>\\r\\n\\r\\n<button type=\\\"button\\\" class=\\\"btn btn-outline-info waves-effect\\\" id=\\\"review_update_button\\\" [routerLink]=\\\"['/products/productreview/update']\\\" (click)=\\\"setReviewObject()\\\" >수정</button>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { HttpClientModule, HttpHeaders, HttpClient } from '@angular/common/http';\r\n\r\nimport { ReviewService} from \"../../shared/services/review.service\";\r\nimport {Review} from \"../../shared/models/Review\";\r\nimport { TokenService } from '../../shared/services/token.service';\r\nimport { Router } from '@angular/router';\r\n\r\n\r\n@Component({\r\n  selector: 'app-product-review-detail',\r\n  templateUrl: './product-review-detail.component.html',\r\n  styleUrls: ['./product-review-detail.component.css']\r\n})\r\nexport class ProductReviewDetailComponent implements OnInit {\r\n\r\n  review : Review;\r\n\r\n  constructor(\r\n\r\n    private reviewService : ReviewService,\r\n    private http : HttpClient,\r\n    private tokenService: TokenService,\r\n    private router: Router\r\n\r\n\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n\r\n      this.reviewService.getReviewNoObject().subscribe((review: Review)=>{\r\n      this.tokenService.saveToken(\"reviewToken\",review);\r\n      this.review = review;\r\n      return this.review;\r\n      })\r\n\r\n\r\n  }\r\n\r\n  setReviewObject(){\r\n    this.review = this.tokenService.getToken(\"reviewToken\");\r\n    this.reviewService.setReviewObject(this.review);\r\n  }\r\n\r\n\r\n\r\n  deleteReview(review : Review){\r\n\r\n    this.reviewService.deleteReview(this.review)\r\n    .subscribe(()=>{\r\n      alert(\"고객님의 상품후기가 삭제되었습니다.\");\r\n      this.router.navigate(['/products/product', this.review.p_code]);\r\n    })\r\n  }\r\n\r\n\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<hr class=\\\"between-sections\\\">\\r\\n\\r\\n<div class=\\\"card card-cascade wider reverse\\\">\\r\\n\\r\\n  <!-- Card content -->\\r\\n  <div class=\\\"card-body card-body-cascade text-center\\\">\\r\\n\\r\\n    <!-- Title -->\\r\\n    <h4 class=\\\"card-title\\\"><strong>상품 후기 수정</strong></h4>\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n\\r\\n<hr class=\\\"between-sections\\\">\\r\\n\\r\\n<!-- Default form contact -->\\r\\n<form name=\\\"updateForm\\\" #updateReviewForm=\\\"ngForm\\\" (ngSubmit)=\\\"updateReview(updateReviewForm)\\\">\\r\\n  <!--Table-->\\r\\n  <table class=\\\"table table-bordered\\\">\\r\\n    <!--Table body-->\\r\\n    <tbody>\\r\\n      <tr [hidden]=true>\\r\\n        <th>후기 번호</th>\\r\\n        <td>\\r\\n          <input type=\\\"number\\\" id=\\\"exampleForm2\\\" class=\\\"form-control\\\" required [(ngModel)]=\\\"review.rev_no\\\" [ngModelOptions]=\\\"{standalone: true}\\\" />\\r\\n        </td>\\r\\n      </tr>\\r\\n      <tr>\\r\\n        <th class=\\\"cyan lighten-4\\\">제목</th>\\r\\n        <td>\\r\\n          <input type=\\\"text\\\" id=\\\"exampleForm2\\\" class=\\\"form-control\\\" placeholder=\\\"제목을 입력해주세요.\\\"\\r\\n            required [(ngModel)]=\\\"review.rev_title\\\" [ngModelOptions]=\\\"{standalone: true}\\\" />\\r\\n        </td>\\r\\n      </tr>\\r\\n      <tr>\\r\\n        <th class=\\\"cyan lighten-4\\\">작성자 ID</th>\\r\\n        <td>\\r\\n          <input type=\\\"text\\\" id=\\\"exampleForm2\\\" class=\\\"form-control\\\" required [(ngModel)]=\\\"review.u_id\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [disabled]=true/>\\r\\n        </td>\\r\\n      </tr>\\r\\n      <tr>\\r\\n        <th class=\\\"cyan lighten-4\\\">후기 내용</th>\\r\\n        <td colspan=\\\"2\\\">\\r\\n          <textarea name=\\\"reviewContent\\\" rows=\\\"8\\\" cols=\\\"150\\\" placeholder=\\\"내용을 입력해주세요.\\\" class=\\\"form-control\\\" required [(ngModel)]=\\\"review.rev_content\\\" [ngModelOptions]=\\\"{standalone: true}\\\"></textarea>\\r\\n        </td>\\r\\n      </tr>\\r\\n    </tbody>\\r\\n  </table>\\r\\n\\r\\n  <div class=\\\"text-center mt-4\\\">\\r\\n    <button type=\\\"submit\\\" class=\\\"btn btn-outline-danger waves-effect\\\">수정</button>\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-outline-info waves-effect\\\" [routerLink]=\\\"['/products/product', review.p_code]\\\">취소</button>\\r\\n  </div>\\r\\n</form>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { NgForm, FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\n\r\nimport { ReviewService } from '../../shared/services/review.service';\r\nimport { Review } from '../../shared/models/review';\r\n\r\n@Component({\r\n  selector: 'app-product-review-update',\r\n  templateUrl: './product-review-update.component.html',\r\n  styleUrls: ['./product-review-update.component.css']\r\n})\r\nexport class ProductReviewUpdateComponent implements OnInit {\r\n\r\n  review : Review;\r\n\r\n  constructor(\r\n    private reviewService : ReviewService,\r\n    private router: Router\r\n\r\n\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n\r\n    this.review = this.reviewService.getReviewObject();\r\n\r\n  }\r\n\r\n  updateReview(form : NgForm){\r\n\r\n    // console.log(this.review.rev_no);\r\n    // console.log(this.review.u_id);\r\n    // console.log(this.review.rev_title);\r\n    // console.log(this.review.rev_content);\r\n\r\n\r\n\r\n    this.reviewService.updateReview(this.review)\r\n    .subscribe(()=>{\r\n      alert(\"상품 후기가 수정되었습니다.\");\r\n      this.router.navigate(['/products/review', this.review.rev_no]);\r\n    })\r\n  }\r\n\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<hr class=\\\"between-sections\\\">\\r\\n\\r\\n<div class=\\\"card card-cascade wider reverse\\\">\\r\\n\\r\\n  <!-- Card content -->\\r\\n  <div class=\\\"card-body card-body-cascade text-center\\\">\\r\\n\\r\\n    <!-- Title -->\\r\\n    <h4 class=\\\"card-title\\\"><strong>상품 후기 쓰기</strong></h4>\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n\\r\\n<hr class=\\\"between-sections\\\">\\r\\n\\r\\n<!-- Default form contact -->\\r\\n<form (ngSubmit)=\\\"insertProductReview()\\\">\\r\\n  <!--Table-->\\r\\n  <table class=\\\"table table-bordered\\\">\\r\\n    <!--Table body-->\\r\\n    <tbody>\\r\\n      <tr>\\r\\n        <th>제목</th>\\r\\n        <td>\\r\\n          <input type=\\\"text\\\" id=\\\"exampleForm2\\\" class=\\\"form-control\\\" placeholder=\\\"제목을 입력해주세요.\\\" required [(ngModel)]=\\\"review.rev_title\\\" [ngModelOptions]=\\\"{standalone: true}\\\" />\\r\\n        </td>\\r\\n      </tr>\\r\\n      <tr [hidden]=true>\\r\\n        <th>작성자</th>\\r\\n        <td>\\r\\n          <input type=\\\"text\\\" id=\\\"exampleForm2\\\" class=\\\"form-control\\\" required [(ngModel)]=\\\"review.u_id\\\" [ngModelOptions]=\\\"{standalone: true}\\\" />\\r\\n        </td>\\r\\n      </tr>\\r\\n      <tr>\\r\\n        <th colspan=\\\"1\\\">후기 내용</th>\\r\\n        <td colspan=\\\"2\\\">\\r\\n          <textarea name=\\\"ReviewContent\\\" rows=\\\"8\\\" cols=\\\"150\\\" placeholder=\\\"내용을 입력해주세요.\\\" class=\\\"form-control\\\" required [(ngModel)]=\\\"review.rev_content\\\" [ngModelOptions]=\\\"{standalone: true}\\\"></textarea>\\r\\n        </td>\\r\\n      </tr>\\r\\n    </tbody>\\r\\n  </table>\\r\\n\\r\\n  <div class=\\\"text-center mt-4\\\" [hidden]=\\\"submit\\\">\\r\\n    <button type=\\\"submit\\\" class=\\\"btn btn-outline-danger waves-effect\\\">등록</button>\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-outline-info waves-effect\\\" [routerLink]=\\\"['/products/product', review.p_code]\\\">취소</button>\\r\\n  </div>\\r\\n</form>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { ReviewService } from '../../shared/services/review.service';\r\nimport { Review } from '../../shared/models/review';\r\nimport { AuthService } from '../../shared/services/auth.service';\r\nimport { User } from '../../shared/models/user';\r\nimport { ProductService } from \"../../shared/services/product.service\";\r\nimport { TokenService } from \"../../shared/services/token.service\";\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-product-review-write',\r\n  templateUrl: './product-review-write.component.html',\r\n  styleUrls: ['./product-review-write.component.css']\r\n})\r\nexport class ProductReviewWriteComponent implements OnInit {\r\n\r\n  submit = false;\r\n  review = new Review;\r\n  rev_no : number;\r\n  p_code : string;\r\n\r\n  constructor(\r\n\r\n    private reviewService: ReviewService,\r\n    private router: Router,\r\n    private authService: AuthService,\r\n    private productService : ProductService,\r\n    private tokenService: TokenService,\r\n\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n\r\n    this.review.u_id = this.authService.getLoggedInUser().uid;\r\n\r\n\r\n\r\n  }\r\n\r\n  insertProductReview(){\r\n    this.review.p_code = this.tokenService.getToken(\"p_code\");\r\n    this.reviewService.insertReview(this.review)\r\n    .subscribe(()=>{\r\n      alert(\"후기가 등록되었습니다.\");\r\n      this.router.navigate(['/products/product', this.review.p_code]);\r\n    })\r\n  }\r\n\r\n  setProductCode(p_code: string) {\r\n\r\n    if(this.tokenService.isToken(\"p_code\")){\r\n      this.p_code = this.tokenService.getToken(\"p_code\");\r\n    }\r\n    console.log(p_code);\r\n  }\r\n\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<hr class=\\\"between-sections\\\">\\r\\n\\r\\n<ol class=\\\"breadcrumb font-weight-bold\\\">\\r\\n  <li>상품 후기</li>\\r\\n</ol>\\r\\n\\r\\n<table class=\\\"table table-responsive-md\\\">\\r\\n  <thead class=\\\"amber lighten-3\\\">\\r\\n  <tr>\\r\\n    <th>번호</th>\\r\\n    <th>제목</th>\\r\\n    <th>작성자</th>\\r\\n    <th>작성일</th>\\r\\n    <th>조회</th>\\r\\n  </tr>\\r\\n  </thead>\\r\\n\\r\\n  <tbody>\\r\\n\\r\\n    <tr *ngFor=\\\"let review of reviews | paginate: { itemsPerPage: 5, currentPage: page }; let i = index\\\">\\r\\n    <th>{{i+1}}</th>\\r\\n    <th>\\r\\n      <a [routerLink]=\\\"['/products/review', review.rev_no]\\\" routerLinkActive=\\\"router-link-active\\\"\\r\\n      (click)=\\\"setReviewNo(review.rev_no)\\\">\\r\\n      {{review.rev_title}}\\r\\n    </a>\\r\\n    </th>\\r\\n    <th>{{review.u_id}}</th>\\r\\n    <th>{{review.rev_date | date : 'yyyy-MM-dd'}}</th>\\r\\n    <th>{{review.rev_hits}}</th>\\r\\n    <p>{{review.review_content}}</p>\\r\\n  </tr>\\r\\n\\r\\n  </tbody>\\r\\n\\r\\n  <div class=\\\"text-center mt-3\\\">\\r\\n    <pagination-controls (pageChange)=\\\"page = $event\\\"></pagination-controls>\\r\\n  </div>\\r\\n\\r\\n\\r\\n\\r\\n  <button type=\\\"button\\\" class=\\\"btn btn-outline-info waves-effect\\\" id=\\\"qna_button\\\"\\r\\n    [routerLink]=\\\"['/products/productreview/write']\\\">후기쓰기\\r\\n  </button>\\r\\n\\r\\n</table>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { ReviewService} from \"../../shared/services/review.service\";\r\nimport {Review} from \"../../shared/models/Review\";\r\nimport {ProductService} from \"../../shared/services/product.service\";\r\nimport { TokenService } from \"../../shared/services/token.service\";\r\n\r\n\r\n@Component({\r\n  selector: 'app-product-review',\r\n  templateUrl: './product-review.component.html',\r\n  styleUrls: ['./product-review.component.css']\r\n})\r\nexport class ProductReviewComponent implements OnInit {\r\n\r\n  page = 1;\r\n  reviews : Review[];\r\n  p_code : string;\r\n  rev_no : number;\r\n\r\n\r\n  constructor(\r\n    private reviewService : ReviewService,\r\n    private productService : ProductService,\r\n    private tokenService: TokenService\r\n\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n       this.productService.getReview()\r\n      .subscribe((reviews: Review[])=>{\r\n        // this.tokenService.saveToken(\"productReviewToken\", reviews);\r\n        this.reviews = reviews;\r\n         })\r\n\r\n\r\n\r\n  }\r\n\r\n  setReviewNo(rev_no : number){\r\n    // this.reviewService.setReviewNo(rev_no);\r\n\r\n\r\n    this.reviewService.setReviewNo(rev_no);\r\n    this.setReviewNoObject(rev_no);\r\n\r\n    if(this.tokenService.isToken(\"rev_no\")){\r\n      this.tokenService.removeToken(\"rev_no\");\r\n    }else{\r\n      this.tokenService.saveToken(\"rev_no\", rev_no);\r\n    }\r\n\r\n    // this.rev_no = rev_no;\r\n    // this.setReviewNoObject(rev_no);\r\n\r\n  }\r\n\r\n\r\n  setReviewNoObject(rev_no: number) {\r\n    var review = this.reviews.find(function (item){\r\n      return item.rev_no == rev_no;\r\n    });\r\n    this.reviewService.setReviewNoObject(review);\r\n    // this.check(review);\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n}\r\n","module.exports = \"<!-- <hr class=\\\"between-sections\\\">\\r\\n <div class=\\\"card-body card-body-cascade text-center\\\">\\r\\n\\r\\n\\r\\n    <h4 class=\\\"card-title\\\"><strong>상품 문의</strong></h4>\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n\\r\\n<hr class=\\\"between-sections\\\">\\r\\n\\r\\n\\r\\n<form (ngSubmit)=\\\"insertQna()\\\">\\r\\n\\r\\n  <table class=\\\"table table-bordered\\\">\\r\\n\\r\\n    <tbody> -->\\r\\n      <!-- <tr>\\r\\n        <th>제목</th>\\r\\n        <td>\\r\\n          <input type=\\\"text\\\" id=\\\"exampleForm2\\\" class=\\\"form-control\\\" placeholder=\\\"제목을 입력해주세요.\\\" required [(ngModel)]=\\\"productQna.pq_title\\\" [ngModelOptions]=\\\"{standalone: true}\\\" />\\r\\n        </td>\\r\\n      </tr>\\r\\n      <tr [hidden]=true>\\r\\n        <th>작성자</th>\\r\\n        <td>\\r\\n          <input type=\\\"text\\\" id=\\\"exampleForm2\\\" class=\\\"form-control\\\" required [(ngModel)]=\\\"productQna.u_id\\\" [ngModelOptions]=\\\"{standalone: true}\\\" />\\r\\n        </td>\\r\\n      </tr>\\r\\n      <tr>\\r\\n        <th colspan=\\\"1\\\">문의 내용</th>\\r\\n        <td colspan=\\\"2\\\">\\r\\n          <textarea name=\\\"qnaContent\\\" rows=\\\"8\\\" cols=\\\"150\\\" placeholder=\\\"내용을 입력해주세요.\\\" class=\\\"form-control\\\" required [(ngModel)]=\\\"productQna.pq_content\\\" [ngModelOptions]=\\\"{standalone: true}\\\"></textarea>\\r\\n        </td>\\r\\n      </tr>\\r\\n    </tbody>\\r\\n  </table>\\r\\n\\r\\n  <div class=\\\"text-center mt-4\\\" [hidden]=\\\"submit\\\">\\r\\n    <button type=\\\"submit\\\" class=\\\"btn btn-outline-danger waves-effect\\\">등록</button>\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-outline-info waves-effect\\\" [routerLink]=\\\"['/products/all-products']\\\">취소</button>\\r\\n  </div>\\r\\n</form> -->\\r\\n\"","module.exports = \"\"","import { Component, OnInit } from \"@angular/core\";\r\n\r\n@Component({\r\n  selector: \"app-product\",\r\n  templateUrl: \"./product.component.html\",\r\n  styleUrls: [\"./product.component.scss\"]\r\n})\r\nexport class ProductComponent implements OnInit {\r\n  constructor() {}\r\n\r\n  ngOnInit() {}\r\n}\r\n","// Core Dependencies\r\nimport { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { RouterModule } from \"@angular/router\";\r\n\r\n// configuration and services\r\nimport { ProductRoutes } from \"./product.routing\";\r\n\r\n// Components\r\nimport { ProductComponent } from \"./product.component\";\r\nimport { BestProductComponent } from \"./best-product/best-product.component\";\r\nimport { ProductListComponent } from \"./product-list/product-list.component\";\r\nimport { ProductDetailComponent } from \"./product-detail/product-detail.component\";\r\nimport { SharedModule } from \"../shared/shared.module\";\r\nimport { ProductReviewComponent} from \"./product-review/product-review.component\";\r\nimport { ProductReviewDetailComponent} from \"./product-review-detail/product-review-detail.component\";\r\n\r\nimport { ProductService } from \"../shared/services/product.service\";\r\nimport { ReviewService } from \"../shared/services/review.service\";\r\nimport { ProductQnaComponent } from './product-qna/product-qna.component';\r\nimport { ProductQnaService} from \"../shared/services/product-qna.service\";\r\nimport { ProductQnaDetailComponent } from './product-qna-detail/product-qna-detail.component';\r\nimport { ProductReviewWriteComponent } from './product-review-write/product-review-write.component';\r\nimport { ProductQnaWriteComponent } from './product-qna-write/product-qna-write.component';\r\nimport { ProductReviewUpdateComponent } from './product-review-update/product-review-update.component';\r\nimport { ProductQnaUpdateComponent } from './product-qna-update/product-qna-update.component';\r\n\r\n\r\n//동현임포트수정\r\n\r\n//동현임포트수정끝\r\n@NgModule({\r\n  imports: [CommonModule, RouterModule.forChild(ProductRoutes), SharedModule],\r\n  declarations: [\r\n    ProductComponent,\r\n    BestProductComponent,\r\n    ProductListComponent,\r\n    ProductDetailComponent,\r\n    ProductReviewComponent,\r\n    ProductQnaComponent,\r\n    ProductQnaDetailComponent,\r\n    ProductReviewDetailComponent,\r\n    ProductReviewWriteComponent,\r\n    ProductQnaWriteComponent,\r\n    ProductReviewUpdateComponent,\r\n    ProductQnaUpdateComponent,\r\n    ProductReviewDetailComponent\r\n\r\n  ],\r\n  exports: [BestProductComponent],\r\n  providers: [\r\n    ProductService,\r\n    ReviewService,\r\n    ProductQnaService\r\n  ],\r\n})\r\nexport class ProductModule {}\r\n","import { ProductListComponent } from \"./product-list/product-list.component\";\r\nimport { Routes } from \"@angular/router\";\r\nimport { IndexComponent } from \"../index/index.component\";\r\nimport { ProductDetailComponent } from \"./product-detail/product-detail.component\";\r\nimport {ProductReviewDetailComponent} from \"./product-review-detail/product-review-detail.component\";\r\nimport {ProductReviewWriteComponent} from \"./product-review-write/product-review-write.component\";\r\nimport {ProductQnaWriteComponent} from \"./product-qna-write/product-qna-write.component\";\r\nimport {ProductQnaDetailComponent} from \"./product-qna-detail/product-qna-detail.component\";\r\nimport {ProductReviewUpdateComponent} from \"./product-review-update/product-review-update.component\";\r\nimport {ProductQnaUpdateComponent} from \"./product-qna-update/product-qna-update.component\";\r\n\r\nimport { AuthGuard } from \"../shared/services/auth_gaurd\";\r\n\r\nexport const ProductRoutes: Routes = [\r\n  {\r\n    path: \"products\",\r\n    children: [\r\n      {\r\n        path: \"\",\r\n        component: IndexComponent\r\n      },\r\n      {\r\n        path: \"all-products\",\r\n        component: ProductListComponent\r\n      },\r\n      {\r\n        path: \"product/:p_code\",\r\n        component: ProductDetailComponent\r\n      },\r\n\r\n      {\r\n        path:\":p_kind\",\r\n        component : ProductListComponent\r\n      },\r\n\r\n      {\r\n        path:\"review/:rev_no\",\r\n        component: ProductReviewDetailComponent\r\n\r\n      },\r\n\r\n      {\r\n        path:\"qna/:pq_no\",\r\n        component: ProductQnaDetailComponent\r\n\r\n      },\r\n\r\n      {\r\n        path:\"productqna/write\",\r\n        component: ProductQnaWriteComponent,\r\n        canActivate: [AuthGuard]\r\n      },\r\n\r\n      {\r\n        path:\"productreview/write\",\r\n        component: ProductReviewWriteComponent,\r\n        canActivate: [AuthGuard]\r\n      },\r\n\r\n      {\r\n        path:\"productreview/update\",\r\n        component: ProductReviewUpdateComponent,\r\n        canActivate: [AuthGuard]\r\n      },\r\n\r\n      {\r\n        path:\"productqna/update\",\r\n        component: ProductQnaUpdateComponent,\r\n        canActivate: [AuthGuard]\r\n      }\r\n\r\n\r\n    ]\r\n  }\r\n];\r\n","export class Cart{\r\n  public cno:number;\r\n  public uid:string;\r\n  public pcode:string;\r\n  public camount:number;\r\n  public p_img:string;\r\n  public p_sellprice:number;\r\n  public p_name:string;\r\n  public p_kind:string;\r\n  public p_content:string;\r\n}\r\n","export class Product {\r\n  // $key: string;\r\n  // productId: number;\r\n  // productName: string;\r\n  // productCategory: string;\r\n  // productPrice: number;\r\n  // productDescription: string;\r\n  // productImageUrl: string;\r\n  // productAdded: number;\r\n  // productQuatity: number;\r\n  // ratings: number;\r\n  // favourite: boolean;\r\n  // productSeller: string;\r\n\r\n  public p_code: string;\r\n  public p_name: string;\r\n  public p_count: number;\r\n  public p_kind: string;\r\n  public p_price : number;\r\n  public p_sellPrice: number;\r\n  public p_profit : number;\r\n  public p_content : string;\r\n  public p_img : string;\r\n  public p_date : Date;\r\n\r\n  public updateFrom(src: Product): void {\r\n    this.p_code = src.p_code;\r\n    this.p_name = src.p_name;\r\n    this.p_count = src.p_count;\r\n    this.p_kind = src.p_kind;\r\n    this.p_price = src.p_price;\r\n    this.p_sellPrice = src.p_sellPrice;\r\n    this.p_profit = src.p_profit;\r\n    this.p_content = src.p_content;\r\n    this.p_img = src.p_img;\r\n    this.p_date = src.p_date;\r\n\r\n  }\r\n\r\n\r\n\r\n}\r\n","export class ProductQna {\r\n\r\n  pq_no : number;\r\n  pq_category : string;\r\n  pq_title : string;\r\n  pq_content : string;\r\n  pq_reply : string;\r\n  pq_replyyn : string;\r\n  pq_hits : number;\r\n  p_code : string;\r\n  u_id : string;\r\n  pq_date : Date;\r\n\r\n\r\n\r\n}\r\n","export class Review{\r\n\r\nrev_no : number;\r\nrev_title : string;\r\nrev_content : string;\r\nrev_hits : number;\r\np_code : string;\r\nu_id : string;\r\nrev_date : Date;\r\n\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClientModule, HttpHeaders, HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs/Observable';\r\n\r\nimport {ProductQna} from \"../models/ProductQna\";\r\nimport {ProductService} from \"./product.service\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProductQnaService {\r\n\r\n  productQnas : any;\r\n  pq_no : number;\r\n  p_code : string;\r\n  productQna : ProductQna;\r\n  productQna_update : ProductQna;\r\n  u_id : string;\r\n\r\n  private url = 'http://localhost:8080/toma/productqna/';\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private productService : ProductService\r\n  ) { }\r\n\r\n\r\n  setProductCode(){\r\n    this.p_code = this.productService.getProductCode();\r\n  }\r\n\r\n  getProductQna(){\r\n    return this.http.get(this.url + this.p_code);\r\n  }\r\n\r\n  setProductQnaNo(pq_no : number){\r\n    this.pq_no = pq_no;\r\n  }\r\n\r\n\r\n  setProductQnaObject(productQna_update : ProductQna){\r\n    this.productQna_update = productQna_update;\r\n  }\r\n\r\n  getProductQnaObject(){\r\n    return this.productQna_update;\r\n  }\r\n\r\n\r\n  incrementProductQnaHits(productQna: ProductQna) {\r\n    return this.http.put(this.url + this.pq_no, productQna);\r\n  }\r\n\r\n\r\n  setProductQnaNoObject(productQna : ProductQna){\r\n\r\n    this.incrementProductQnaHits(productQna).subscribe(()=>{\r\n      this.productQna = productQna;\r\n    });\r\n\r\n  }\r\n\r\n  getProductQnaNoObject(){\r\n  return this.http.get(this.url + \"detail/\" + this.pq_no);\r\n }\r\n\r\n insertProductQna(productQna : ProductQna){\r\n   return this.http.post(this.url + \"write\", productQna);\r\n }\r\n\r\n updateProductQna(productQna_update: ProductQna):Observable<any> {\r\n   return this.http.put(this.url + \"update\" , productQna_update)\r\n     .catch(this.handleError);\r\n }\r\n\r\ndeleteProductQna( productQna : ProductQna){\r\n  return this.http.post(this.url + \"delete\" , productQna);\r\n}\r\n\r\nprivate handleError( error: Response | any) {\r\n  console.error(error.message || error);\r\n  return Observable.throw(error.status);\r\n}\r\n\r\n\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClientModule, HttpHeaders, HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs/Observable';\r\n\r\nimport {Review} from \"../models/Review\";\r\nimport {ProductService} from \"./product.service\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ReviewService {\r\n\r\n  reviews : any;\r\n  rev_no: number;\r\n  p_code : string;\r\n  review : Review;\r\n  u_id : string;\r\n  review_update : Review;\r\n\r\n  private url = 'http://localhost:8080/toma/review/';\r\n\r\n  constructor(private http: HttpClient, private productService : ProductService) { }\r\n\r\n  getReview(){\r\n    return this.http.get(this.url + this.p_code);\r\n  }\r\n\r\n\r\n  setReviewNo(rev_no : number){\r\n    this.rev_no = rev_no;\r\n  }\r\n\r\n  setProductCode(){\r\n    this.p_code = this.productService.getProductCode();\r\n  }\r\n\r\n\r\n  setReviewNoObject(review : Review){\r\n\r\n    this.incrementReviewHits(review).subscribe(()=>{\r\n      this.review = review;\r\n    });\r\n\r\n  }\r\n\r\n\r\n  setReviewObject(review_update : Review){\r\n    this.review_update = review_update;\r\n  }\r\n\r\n  getReviewObject(){\r\n    return this.review_update;\r\n  }\r\n\r\n\r\n\r\n  incrementReviewHits(review: Review) {\r\n    return this.http.put(this.url + this.rev_no, review);\r\n  }\r\n\r\n  getReviewNoObject(){\r\n    return this.http.get(this.url + \"detail/\" + this.rev_no );\r\n }\r\n\r\n\r\n insertReview(review : Review){\r\n   return this.http.post(this.url + \"write\", review);\r\n }\r\n\r\n updateReview(review_update: Review):Observable<any> {\r\n   return this.http.post(this.url + \"update\", review_update)\r\n     .catch(this.handleError);\r\n }\r\n\r\ndeleteReview(review: Review){\r\n  return this.http.post(this.url+ \"delete\", review);\r\n}\r\n\r\nprivate handleError( error: Response | any) {\r\n  console.error(error.message || error);\r\n  return Observable.throw(error.status);\r\n}\r\n\r\n\r\n}\r\n"],"sourceRoot":""}