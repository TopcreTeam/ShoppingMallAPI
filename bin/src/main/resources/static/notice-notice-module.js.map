{"version":3,"sources":["webpack:///./src/app/notice/faq-detail/faq-detail.component.css","webpack:///./src/app/notice/faq-detail/faq-detail.component.html","webpack:///./src/app/notice/faq-detail/faq-detail.component.ts","webpack:///./src/app/notice/faq/faq.component.css","webpack:///./src/app/notice/faq/faq.component.html","webpack:///./src/app/notice/faq/faq.component.ts","webpack:///./src/app/notice/notice-detail/notice-detail.component.css","webpack:///./src/app/notice/notice-detail/notice-detail.component.html","webpack:///./src/app/notice/notice-detail/notice-detail.component.ts","webpack:///./src/app/notice/notice-list/notice-list.component.css","webpack:///./src/app/notice/notice-list/notice-list.component.html","webpack:///./src/app/notice/notice-list/notice-list.component.ts","webpack:///./src/app/notice/notice.component.css","webpack:///./src/app/notice/notice.component.html","webpack:///./src/app/notice/notice.component.ts","webpack:///./src/app/notice/notice.module.ts","webpack:///./src/app/notice/notice.routing.ts","webpack:///./src/app/notice/qna-detail/qna-detail.component.css","webpack:///./src/app/notice/qna-detail/qna-detail.component.html","webpack:///./src/app/notice/qna-detail/qna-detail.component.ts","webpack:///./src/app/notice/qna-update/qna-update.component.css","webpack:///./src/app/notice/qna-update/qna-update.component.html","webpack:///./src/app/notice/qna-update/qna-update.component.ts","webpack:///./src/app/notice/qna-write/qna-write.component.css","webpack:///./src/app/notice/qna-write/qna-write.component.html","webpack:///./src/app/notice/qna-write/qna-write.component.ts"],"names":[],"mappings":"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","file":"notice-notice-module.js","sourcesContent":["module.exports = \"ol li {\\r\\n  font-weight: bold;\\r\\n}\\r\\n\\r\\ntbody th {\\r\\n  background-color: lightgray;\\r\\n  text-align: center;\\r\\n  font-weight: bold;\\r\\n  font-size: 13pt;\\r\\n  padding: 10px;\\r\\n}\\r\\n\\r\\ntbody tr td p {\\r\\n  padding: 20px;\\r\\n}\\r\\n\"","module.exports = \"<hr class=\\\"between-sections\\\">\\r\\n\\r\\n<div class=\\\"card card-cascade wider reverse\\\">\\r\\n\\r\\n  <!-- Card content -->\\r\\n  <div class=\\\"card-body card-body-cascade text-center\\\">\\r\\n\\r\\n    <!-- Title -->\\r\\n    <h4 class=\\\"card-title\\\"><strong>자주하는 질문</strong></h4>\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n\\r\\n<hr class=\\\"between-sections\\\">\\r\\n\\r\\n<ol class=\\\"breadcrumb\\\">\\r\\n  <li class=\\\"breadcrumb-item\\\">\\r\\n    <a [routerLink]=\\\"['/index']\\\">Home</a>\\r\\n  </li>\\r\\n  <li class=\\\"breadcrumb-item\\\">고객센터</li>\\r\\n  <li class=\\\"breadcrumb-item\\\">\\r\\n    <a [routerLink]=\\\"['/notice/faq']\\\">자주하는 질문</a>\\r\\n    <!-- delete : (click)=\\\"removeToken()\\\" -->\\r\\n  </li>\\r\\n</ol>\\r\\n\\r\\n<!--Table-->\\r\\n<table class=\\\"table table-bordered\\\">\\r\\n\\r\\n  <!--Table body-->\\r\\n  <tbody>\\r\\n    <tr>\\r\\n      <th class=\\\"cyan lighten-4\\\">제목</th>\\r\\n      <td colspan=\\\"3\\\">{{ faq?.f_title }}</td>\\r\\n    </tr>\\r\\n    <tr>\\r\\n      <th class=\\\"cyan lighten-4\\\">작성자</th>\\r\\n      <td colspan=\\\"3\\\">{{ faq?.a_id }}</td>\\r\\n    </tr>\\r\\n    <tr>\\r\\n      <th class=\\\"cyan lighten-4\\\">작성일</th>\\r\\n      <td>{{ faq?.f_date | date:'yyyy-MM-dd' }}</td>\\r\\n      <th class=\\\"cyan lighten-4\\\">조회수</th>\\r\\n      <td>{{ faq?.f_hits }}</td>\\r\\n    </tr>\\r\\n    <tr>\\r\\n      <td colspan=\\\"4\\\">\\r\\n        <pre>{{ faq?.f_content }}</pre>\\r\\n      </td>\\r\\n    </tr>\\r\\n  </tbody>\\r\\n  <!--Table body-->\\r\\n\\r\\n</table>\\r\\n<!--Table-->\\r\\n\\r\\n<button type=\\\"button\\\" class=\\\"btn btn-outline-info waves-effect\\\" [routerLink]=\\\"['/notice/faq']\\\">목록\\r\\n  <!-- (click)=\\\"removeToken()\\\" -->\\r\\n</button>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n//remove ngOnDestroy\r\nimport { HttpClientModule, HttpHeaders, HttpClient } from '@angular/common/http';\r\n\r\nimport { FaqService } from '../../shared/services/faq.service';\r\nimport { Faq } from '../../shared/models/faq';\r\nimport { TokenService } from '../../shared/services/token.service';\r\n\r\n@Component({\r\n  selector: 'app-faq-detail',\r\n  templateUrl: './faq-detail.component.html',\r\n  styleUrls: ['./faq-detail.component.css']\r\n})\r\nexport class FaqDetailComponent implements OnInit {\r\n  faq: Faq;\r\n\r\n  constructor(\r\n    private faqService: FaqService,\r\n    private http: HttpClient,\r\n    private tokenService: TokenService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.faq = this.faqService.getFaqNoObject();\r\n\r\n    if(this.faq == null) {\r\n      var f_no = this.tokenService.getToken(\"faqDetailToken\");\r\n      var faqList = this.tokenService.getToken(\"faqToken\");\r\n      var faq = faqList.find(function(item){\r\n        return item.f_no === f_no;\r\n      });\r\n      var f_content = faq.f_content;\r\n      faq.f_content = faq.f_content.replace(\"\\r\\n\",\"<br>\");\r\n      this.faq = faq;\r\n    }\r\n  }\r\n\r\n  // ngOnDestroy() {\r\n  //   this.removeToken();\r\n  // }\r\n\r\n  // removeToken() {\r\n  //   this.tokenService.removeToken(\"faqToken\");\r\n  // }\r\n\r\n}\r\n","module.exports = \"ol li {\\r\\n  font-weight: bold;\\r\\n}\\r\\n\\r\\nthead tr th {\\r\\n  font-weight: bold;\\r\\n  text-align: center;\\r\\n}\\r\\n\\r\\ntbody tr:hover {\\r\\n  background-color: #FF9090;\\r\\n}\\r\\n\\r\\ntbody tr a:hover {\\r\\n  color: white;\\r\\n}\\r\\n\\r\\ntbody tr th {\\r\\n  text-align: center;\\r\\n}\\r\\n\\r\\nform button {\\r\\n  font-weight: bold;\\r\\n  font-size: 0.8em;\\r\\n}\\r\\n\\r\\n#selectDiv {\\r\\n  padding-top: 0px;\\r\\n  padding-bottom: 10px;\\r\\n}\\r\\n\"","module.exports = \"<hr class=\\\"between-sections\\\">\\r\\n\\r\\n<div class=\\\"card card-cascade wider reverse\\\">\\r\\n\\r\\n  <!-- Card content -->\\r\\n  <div class=\\\"card-body card-body-cascade text-center\\\">\\r\\n\\r\\n    <!-- Title -->\\r\\n    <h4 class=\\\"card-title\\\"><strong>자주하는 질문</strong></h4>\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n\\r\\n<hr class=\\\"between-sections\\\">\\r\\n\\r\\n<ol class=\\\"breadcrumb\\\">\\r\\n  <li class=\\\"breadcrumb-item\\\">\\r\\n    <a [routerLink]=\\\"['/index']\\\">Home</a>\\r\\n  </li>\\r\\n  <li class=\\\"breadcrumb-item\\\">고객센터</li>\\r\\n  <li class=\\\"breadcrumb-item\\\">자주하는 질문</li>\\r\\n</ol>\\r\\n\\r\\n<div id=\\\"selectDiv\\\">\\r\\n  <select (change)=\\\"getFaqByCategory($event.target.value)\\\">\\r\\n    <option value=\\\"\\\" disabled selected>카테고리별 조회</option>\\r\\n    <option *ngFor=\\\"let category of categoryList\\\" [value]=\\\"category\\\">\\r\\n      {{ category }}\\r\\n    </option>\\r\\n  </select>\\r\\n</div>\\r\\n\\r\\n<!--Table-->\\r\\n<table class=\\\"table\\\">\\r\\n    <!--Table head-->\\r\\n    <thead class=\\\"cyan lighten-4\\\">\\r\\n        <tr>\\r\\n            <th>번호</th>\\r\\n            <th>카테고리</th>\\r\\n            <th>제목</th>\\r\\n            <th>작성자</th>\\r\\n            <th>작성일</th>\\r\\n            <th>조회수</th>\\r\\n        </tr>\\r\\n    </thead>\\r\\n    <!--Table head-->\\r\\n\\r\\n    <!--Table body-->\\r\\n    <tbody>\\r\\n        <tr *ngFor=\\\"let faq of faqList | paginate: { itemsPerPage: 10, currentPage: page }\\\">\\r\\n            <th scope=\\\"row\\\">{{ faq.f_no }}</th>\\r\\n            <th>{{ faq.f_category }}</th>\\r\\n            <th>\\r\\n              <a [routerLink]=\\\"['/detail/faq']\\\" routerLinkActive=\\\"router-link-active\\\"\\r\\n                  (click)=\\\"setFaqNo(faq.f_no)\\\">{{ faq.f_title }}\\r\\n              </a>\\r\\n            </th>\\r\\n            <th>{{ faq.a_id }}</th>\\r\\n            <th>{{ faq.f_date | date:'yyyy-MM-dd' }}</th>\\r\\n            <th>{{ faq.f_hits }}</th>\\r\\n        </tr>\\r\\n    </tbody>\\r\\n    <!--Table body-->\\r\\n</table>\\r\\n\\r\\n<!-- Pagination -->\\r\\n<div class=\\\"text-center mt-3\\\">\\r\\n  <pagination-controls (pageChange)=\\\"page = $event\\\"></pagination-controls>\\r\\n</div>\\r\\n\\r\\n<form class=\\\"form-inline mr-auto\\\" (ngSubmit)=\\\"searchTerm()\\\">\\r\\n    <input class=\\\"form-control mr-sm-2 w-50 p-1\\\" type=\\\"text\\\" placeholder=\\\"검색할 제목을 입력해주세요\\\" aria-label=\\\"Search\\\"\\r\\n      [(ngModel)]=\\\"search\\\" [ngModelOptions]=\\\"{standalone: true}\\\"/>\\r\\n    <button class=\\\"btn btn-outline-success btn-rounded btn-sm my-0\\\" type=\\\"submit\\\">검색</button>\\r\\n</form>\\r\\n\\r\\n<hr class=\\\"between-sections\\\">\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { FaqService } from '../../shared/services/faq.service';\r\nimport { Faq } from '../../shared/models/faq';\r\nimport { SearchService } from '../../shared/services/search.service';\r\nimport { TokenService } from '../../shared/services/token.service';\r\n\r\n@Component({\r\n  selector: 'app-faq',\r\n  templateUrl: './faq.component.html',\r\n  styleUrls: ['./faq.component.css']\r\n})\r\nexport class FaqComponent implements OnInit {\r\n  page = 1;\r\n  categoryList = [\"전체조회\", \"배송\", \"환불\", \"기타\"];\r\n  faqList: Faq[];\r\n  search = '';\r\n\r\n  constructor(\r\n    private faqService: FaqService,\r\n    private searchService: SearchService,\r\n    private tokenService: TokenService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    // if(this.tokenService.isToken(\"faqToken\")) {\r\n    //   this.tokenService.removeToken(\"faqToken\");\r\n    // } else {\r\n    this.faqService.getFaqList()\r\n      .subscribe((faqs: Faq[]) => {\r\n        this.tokenService.saveToken(\"faqToken\", faqs);\r\n        this.faqList = faqs;\r\n      });\r\n    // }\r\n  }\r\n\r\n  getFaqByCategory(f_category: string) {\r\n    if (f_category == \"전체조회\" || f_category == \"\") {\r\n      // this.faqList = this.tokenService.getToken(\"faqToken\");\r\n      this.faqService.getFaqList()\r\n        .subscribe((faqs: Faq[]) => {\r\n          // this.tokenService.saveToken(\"faqToken\", faqs);\r\n          this.faqList = faqs;\r\n        });\r\n    } else {\r\n      this.faqService.getFaqCategory(f_category)\r\n        .subscribe((faqList: Faq[]) => {\r\n          this.faqList = faqList;\r\n        });\r\n    }\r\n  }\r\n\r\n  setFaqNo(f_no: number) {\r\n    this.faqService.setFaqNo(f_no);\r\n    this.setFaqNoObject(f_no);\r\n\r\n    if (this.tokenService.isToken(\"faqDetailToken\")) {\r\n      this.tokenService.removeToken(\"faqDetailToken\");\r\n    }\r\n    this.tokenService.saveToken(\"faqDetailToken\", f_no);\r\n  }\r\n\r\n  setFaqNoObject(f_no: number) {\r\n    var faq = this.faqList.find(function(item) {\r\n      return item.f_no === f_no;\r\n    });\r\n    this.faqService.setFaqNoObject(faq);\r\n    this.check(faq);\r\n  }\r\n\r\n  check(faq: Faq) {\r\n    this.faqService.checkFaq(faq);\r\n  }\r\n\r\n  searchTerm() {\r\n    if (this.search == '' || this.search == 'search') {\r\n      this.faqService.getFaqList()\r\n        .subscribe((faqs: Faq[]) => {\r\n          this.faqList = faqs;\r\n        });\r\n    } else {\r\n      this.searchService.faqSearch(this.search)\r\n        .subscribe((faqs: Faq[]) => {\r\n          this.faqList = faqs;\r\n        });\r\n    }\r\n  }\r\n\r\n}\r\n","module.exports = \"ol li {\\r\\n  font-weight: bold;\\r\\n}\\r\\n\\r\\ntbody th {\\r\\n  background-color: lightgray;\\r\\n  text-align: center;\\r\\n  font-weight: bold;\\r\\n  font-size: 13pt;\\r\\n  padding: 10px;\\r\\n}\\r\\n\\r\\ntbody tr td p {\\r\\n  padding: 20px;\\r\\n}\\r\\n\"","module.exports = \"<hr class=\\\"between-sections\\\">\\r\\n\\r\\n<div class=\\\"card card-cascade wider reverse\\\">\\r\\n\\r\\n  <!-- Card content -->\\r\\n  <div class=\\\"card-body card-body-cascade text-center\\\">\\r\\n\\r\\n    <!-- Title -->\\r\\n    <h4 class=\\\"card-title\\\"><strong>공지사항</strong></h4>\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n\\r\\n<hr class=\\\"between-sections\\\">\\r\\n\\r\\n<ol class=\\\"breadcrumb\\\">\\r\\n  <li class=\\\"breadcrumb-item\\\">\\r\\n    <a [routerLink]=\\\"['/index']\\\">Home</a>\\r\\n  </li>\\r\\n  <li class=\\\"breadcrumb-item\\\">고객센터</li>\\r\\n  <li class=\\\"breadcrumb-item\\\">\\r\\n    <a [routerLink]=\\\"['/notice']\\\">공지사항</a>\\r\\n    <!-- delete : (click)=\\\"removeToken()\\\" -->\\r\\n  </li>\\r\\n</ol>\\r\\n\\r\\n<!--Table-->\\r\\n<table class=\\\"table table-bordered\\\">\\r\\n\\r\\n  <!--Table body-->\\r\\n  <tbody>\\r\\n    <tr>\\r\\n      <th class=\\\"cyan lighten-4\\\">제목</th>\\r\\n      <td colspan=\\\"3\\\">{{ notice?.n_title }}</td>\\r\\n    </tr>\\r\\n    <tr>\\r\\n      <th class=\\\"cyan lighten-4\\\">작성자</th>\\r\\n      <td colspan=\\\"3\\\">{{ notice?.a_id }}</td>\\r\\n    </tr>\\r\\n    <tr>\\r\\n      <th class=\\\"cyan lighten-4\\\">작성일</th>\\r\\n      <td>{{ notice?.n_date | date:'yyyy-MM-dd' }}</td>\\r\\n      <th class=\\\"cyan lighten-4\\\">조회수</th>\\r\\n      <td>{{ notice?.n_hits }}</td>\\r\\n    </tr>\\r\\n    <tr>\\r\\n      <td colspan=\\\"4\\\">\\r\\n        <pre>{{ notice?.n_content }}</pre>\\r\\n      </td>\\r\\n    </tr>\\r\\n  </tbody>\\r\\n  <!--Table body-->\\r\\n\\r\\n</table>\\r\\n<!--Table-->\\r\\n\\r\\n<button type=\\\"button\\\" class=\\\"btn btn-outline-info waves-effect\\\" [routerLink]=\\\"['/notice']\\\">목록</button>\\r\\n<!-- delete (click)=\\\"removeToken()\\\" -->\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { HttpClientModule, HttpHeaders, HttpClient } from '@angular/common/http';\r\n\r\nimport { NoticeService } from '../../shared/services/notice.service';\r\nimport { Notice } from '../../shared/models/notice';\r\nimport { TokenService } from '../../shared/services/token.service';\r\n\r\n@Component({\r\n  selector: 'app-notice-detail',\r\n  templateUrl: './notice-detail.component.html',\r\n  styleUrls: ['./notice-detail.component.css']\r\n})\r\nexport class NoticeDetailComponent implements OnInit {\r\n  notice: Notice;\r\n\r\n  constructor(\r\n    private noticeService: NoticeService,\r\n    private http: HttpClient,\r\n    private tokenService: TokenService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.notice = this.noticeService.getNoticeNoObject();\r\n\r\n    if(this.notice == null) {\r\n      var n_no = this.tokenService.getToken(\"noticeDetailToken\");\r\n      var noticeList = this.tokenService.getToken(\"noticeToken\");\r\n      var notice = noticeList.find(function(item){\r\n        return item.n_no === n_no;\r\n      });\r\n      var n_content = notice.n_content;\r\n      notice.n_content = notice.n_content.replace(\"\\r\\n\",\"<br>\");\r\n      this.notice = notice;\r\n    }\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<app-notice></app-notice>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-notice-list',\r\n  templateUrl: './notice-list.component.html',\r\n  styleUrls: ['./notice-list.component.css']\r\n})\r\nexport class NoticeListComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"ol li {\\r\\n  font-weight: bold;\\r\\n}\\r\\n\\r\\nthead tr th {\\r\\n  font-weight: bold;\\r\\n  text-align: center;\\r\\n}\\r\\n\\r\\ntbody tr:hover {\\r\\n  background-color: #FF9090;\\r\\n}\\r\\n\\r\\ntbody tr a:hover {\\r\\n  color: white;\\r\\n}\\r\\n\\r\\ntbody tr th {\\r\\n  text-align: center;\\r\\n}\\r\\n\\r\\nform button {\\r\\n  font-weight: bold;\\r\\n  font-size: 0.8em;\\r\\n}\\r\\n\\r\\n#selectDiv {\\r\\n  padding-top: 0px;\\r\\n  padding-bottom: 10px;\\r\\n}\\r\\n\"","module.exports = \"<hr class=\\\"between-sections\\\">\\r\\n\\r\\n<div class=\\\"card card-cascade wider reverse\\\">\\r\\n\\r\\n  <!-- Card content -->\\r\\n  <div class=\\\"card-body card-body-cascade text-center\\\">\\r\\n\\r\\n    <!-- Title -->\\r\\n    <h4 class=\\\"card-title\\\"><strong>공지사항</strong></h4>\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n\\r\\n<hr class=\\\"between-sections\\\">\\r\\n\\r\\n<ol class=\\\"breadcrumb\\\">\\r\\n  <li class=\\\"breadcrumb-item\\\">\\r\\n    <a [routerLink]=\\\"['/index']\\\">Home</a>\\r\\n  </li>\\r\\n  <li class=\\\"breadcrumb-item\\\">고객센터</li>\\r\\n  <li class=\\\"breadcrumb-item\\\">공지사항</li>\\r\\n</ol>\\r\\n\\r\\n<div id=\\\"selectDiv\\\">\\r\\n  <select (change)=\\\"getNoticeByCategory($event.target.value)\\\">\\r\\n    <option value=\\\"\\\" disabled selected>카테고리별 조회</option>\\r\\n    <option *ngFor=\\\"let category of categoryList\\\" [value]=\\\"category\\\">\\r\\n      {{ category }}\\r\\n    </option>\\r\\n  </select>\\r\\n</div>\\r\\n\\r\\n<!--Table-->\\r\\n<table class=\\\"table\\\">\\r\\n  <!--Table head-->\\r\\n  <thead>\\r\\n    <tr class=\\\"cyan lighten-4\\\">\\r\\n      <th>번호</th>\\r\\n      <th>카테고리</th>\\r\\n      <th>제목</th>\\r\\n      <th>작성자</th>\\r\\n      <th>작성일</th>\\r\\n      <th>조회수</th>\\r\\n    </tr>\\r\\n  </thead>\\r\\n  <!--Table head-->\\r\\n\\r\\n  <!--Table body-->\\r\\n  <tbody class=\\\"view overlay\\\">\\r\\n    <tr *ngFor=\\\"let notice of noticeList | paginate: { itemsPerPage: 10, currentPage: page }; let i = index\\\">\\r\\n      <th scope=\\\"row\\\">{{ i+1 }}</th>\\r\\n      <th>{{ notice.n_category }}</th>\\r\\n      <th>\\r\\n        <a [routerLink]=\\\"['/detail/notice']\\\" routerLinkActive=\\\"router-link-active\\\" (click)=\\\"setNoticeNo(notice.n_no)\\\">{{ notice.n_title }}\\r\\n        </a>\\r\\n      </th>\\r\\n      <th>{{ notice.a_id }}</th>\\r\\n      <th>{{ notice.n_date | date:'yyyy-MM-dd' }}</th>\\r\\n      <th>{{ notice.n_hits }}</th>\\r\\n    </tr>\\r\\n  </tbody>\\r\\n  <!--Table body-->\\r\\n\\r\\n</table>\\r\\n<!-- Pagination -->\\r\\n<div class=\\\"text-center mt-3\\\">\\r\\n  <pagination-controls (pageChange)=\\\"page = $event\\\"></pagination-controls>\\r\\n</div>\\r\\n\\r\\n<form class=\\\"form-inline mr-auto\\\" (ngSubmit)=\\\"searchTerm()\\\">\\r\\n  <input class=\\\"form-control mr-sm-2 w-50 p-1\\\" type=\\\"text\\\" placeholder=\\\"검색할 제목을 입력해주세요.\\\" id=\\\"searchInput\\\" [(ngModel)]=\\\"search\\\" [ngModelOptions]=\\\"{standalone: true}\\\" />\\r\\n  <button class=\\\"btn btn-outline-success btn-rounded btn-sm my-0\\\" type=\\\"submit\\\">검색</button>\\r\\n</form>\\r\\n\\r\\n<hr class=\\\"between-sections\\\">\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { NoticeService } from '../shared/services/notice.service';\r\nimport { Notice } from '../shared/models/notice'\r\nimport { SearchService } from '../shared/services/search.service';\r\nimport { TokenService } from '../shared/services/token.service';\r\n\r\n@Component({\r\n  selector: 'app-notice',\r\n  templateUrl: './notice.component.html',\r\n  styleUrls: ['./notice.component.css']\r\n})\r\nexport class NoticeComponent implements OnInit {\r\n  page = 1;\r\n  categoryList = [\"전체조회\", \"공지\", \"상품\", \"배송\"];\r\n  noticeList: Notice[];\r\n  search = '';\r\n\r\n  constructor(\r\n    private noticeService: NoticeService,\r\n    private searchService: SearchService,\r\n    private tokenService: TokenService\r\n  ) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.noticeService.getNoticeList()\r\n      .subscribe((noticeList: Notice[]) => {\r\n        this.tokenService.saveToken(\"noticeToken\", noticeList);\r\n        this.noticeList = noticeList;\r\n      });\r\n  }\r\n\r\n  getNoticeByCategory(n_category: string) {\r\n    if (n_category == \"전체조회\") {\r\n      this.noticeService.getNoticeList()\r\n        .subscribe((noticeList: Notice[]) => {\r\n          this.noticeList = noticeList;\r\n        });\r\n    } else {\r\n      this.noticeService.getNoticeCategory(n_category)\r\n        .subscribe((noticeList: Notice[]) => {\r\n          this.noticeList = noticeList;\r\n        });\r\n    }\r\n  }\r\n\r\n  setNoticeNo(n_no: number) {\r\n    this.noticeService.setNoticeNo(n_no);\r\n    this.setNoticeNoObject(n_no);\r\n\r\n    if (this.tokenService.isToken(\"noticeDetailToken\")) {\r\n      this.tokenService.removeToken(\"noticeDetailToken\");\r\n    }\r\n    this.tokenService.saveToken(\"noticeDetailToken\", n_no);\r\n  }\r\n\r\n  setNoticeNoObject(n_no: number) {\r\n    var notice = this.noticeList.find(function(item) {\r\n      return item.n_no === n_no;\r\n    });\r\n    this.noticeService.setNoticeNoObject(notice);\r\n    this.check(notice);\r\n  }\r\n\r\n  check(notice: Notice) {\r\n    this.noticeService.checkNotice(notice);\r\n  }\r\n\r\n  searchTerm() {\r\n    if (this.search == '' || this.search == 'search') {\r\n      this.noticeService.getNoticeList()\r\n        .subscribe((noticeList: Notice[]) => {\r\n          this.noticeList = noticeList;\r\n        });\r\n    } else {\r\n      this.searchService.noticeSearch(this.search)\r\n        .subscribe((noticeList: Notice[]) => {\r\n          this.noticeList = noticeList;\r\n        });\r\n    }\r\n  }\r\n\r\n}\r\n","import { NgModule, NO_ERRORS_SCHEMA } from '@angular/core';\r\nimport { RouterModule } from \"@angular/router\";\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { NoticeRoutes } from \"./notice.routing\";\r\n\r\nimport { IndexModule } from \"../index/index.module\";\r\nimport { ProductModule } from \"../product/product.module\";\r\nimport { UserModule } from \"../user/user.module\";\r\nimport { SharedModule } from \"../shared/shared.module\";\r\n\r\nimport { NoticeComponent } from './notice.component';\r\nimport { NoticeListComponent } from './notice-list/notice-list.component'\r\nimport { FaqComponent } from './faq/faq.component';\r\nimport { QnaComponent } from './qna/qna.component';\r\n\r\nimport { NoticeDetailComponent } from './notice-detail/notice-detail.component';\r\nimport { FaqDetailComponent } from './faq-detail/faq-detail.component';\r\nimport { QnaDetailComponent } from './qna-detail/qna-detail.component';\r\n\r\nimport { QnaWriteComponent } from './qna-write/qna-write.component';\r\nimport { QnaUpdateComponent } from './qna-update/qna-update.component';\r\n\r\n@NgModule({\r\n  declarations: [NoticeComponent, NoticeListComponent, FaqComponent, QnaComponent,\r\n    NoticeDetailComponent, FaqDetailComponent, QnaDetailComponent, QnaWriteComponent, QnaUpdateComponent],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(NoticeRoutes),\r\n    IndexModule,\r\n    ProductModule,\r\n    UserModule,\r\n    SharedModule\r\n  ],\r\n  schemas: [NO_ERRORS_SCHEMA]\r\n})\r\n\r\nexport class NoticeModule { }\r\n","import { Routes } from \"@angular/router\";\r\n\r\nimport { AuthGuard } from \"../shared/services/auth_gaurd\";\r\n\r\nimport { NoticeComponent } from \"./notice.component\";\r\nimport { FaqComponent } from \"./faq/faq.component\";\r\nimport { QnaComponent } from \"./qna/qna.component\";\r\n\r\nimport { NoticeDetailComponent } from \"./notice-detail/notice-detail.component\";\r\nimport { FaqDetailComponent } from \"./faq-detail/faq-detail.component\";\r\nimport { QnaDetailComponent } from \"./qna-detail/qna-detail.component\";\r\n\r\nimport { QnaWriteComponent } from \"./qna-write/qna-write.component\";\r\nimport { QnaUpdateComponent } from \"./qna-update/qna-update.component\";\r\n\r\nexport const NoticeRoutes: Routes = [\r\n  {\r\n    path: \"notice\",\r\n    children: [\r\n      {\r\n        path: \"\",\r\n        component: NoticeComponent\r\n      },\r\n      {\r\n        path: \"faq\",\r\n        component: FaqComponent\r\n      },\r\n      {\r\n        path: \"qna\",\r\n        component: QnaComponent,\r\n        canActivate: [AuthGuard]\r\n      },\r\n      {\r\n        path: \"qna/write\",\r\n        component: QnaWriteComponent,\r\n        canActivate: [AuthGuard]\r\n      },\r\n      {\r\n        path: \"qna/update\",\r\n        component: QnaUpdateComponent,\r\n        canActivate: [AuthGuard]\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    path: \"detail\",\r\n    children: [\r\n      {\r\n        path: \"notice\",\r\n        component: NoticeDetailComponent\r\n      },\r\n      {\r\n        path: \"faq\",\r\n        component: FaqDetailComponent\r\n      },\r\n      {\r\n        path: \"qna\",\r\n        component: QnaDetailComponent,\r\n        canActivate: [AuthGuard]\r\n      }\r\n    ]\r\n  }\r\n];\r\n","module.exports = \"#qna_update_button {\\r\\n  float: right;\\r\\n}\\r\\n\\r\\n#qna_back_button {\\r\\n  float: right;\\r\\n}\\r\\n\\r\\nol li {\\r\\n  font-weight: bold;\\r\\n}\\r\\n\\r\\ntbody th {\\r\\n  background-color: lightgray;\\r\\n  text-align: center;\\r\\n  font-weight: bold;\\r\\n  font-size: 13pt;\\r\\n  padding: 10px;\\r\\n}\\r\\n\\r\\ntbody tr td p {\\r\\n  padding: 20px;\\r\\n}\\r\\n\\r\\nbutton {\\r\\n  font-weight: bold;\\r\\n  font-size: 0.8em;\\r\\n}\\r\\n\"","module.exports = \"<hr class=\\\"between-sections\\\">\\r\\n\\r\\n<div class=\\\"card card-cascade wider reverse\\\">\\r\\n\\r\\n  <!-- Card content -->\\r\\n  <div class=\\\"card-body card-body-cascade text-center\\\">\\r\\n\\r\\n    <!-- Title -->\\r\\n    <h4 class=\\\"card-title\\\"><strong>1:1 질문하기</strong></h4>\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n\\r\\n<hr class=\\\"between-sections\\\">\\r\\n\\r\\n<ol class=\\\"breadcrumb\\\">\\r\\n  <li class=\\\"breadcrumb-item\\\">\\r\\n    <a [routerLink]=\\\"['/index']\\\">Home</a>\\r\\n  </li>\\r\\n  <li class=\\\"breadcrumb-item\\\">고객센터</li>\\r\\n  <li class=\\\"breadcrumb-item\\\">\\r\\n    <a [routerLink]=\\\"['/notice/qna']\\\">1:1 질문하기</a>\\r\\n  </li>\\r\\n</ol>\\r\\n\\r\\n<!--Table-->\\r\\n<table class=\\\"table table-bordered\\\">\\r\\n\\r\\n  <!--Table body-->\\r\\n  <tbody>\\r\\n    <tr>\\r\\n      <th class=\\\"cyan lighten-4\\\">제목</th>\\r\\n      <td colspan=\\\"3\\\">{{ qna?.q_title }}</td>\\r\\n    </tr>\\r\\n    <tr>\\r\\n      <th class=\\\"cyan lighten-4\\\">작성자</th>\\r\\n      <td colspan=\\\"3\\\">{{ qna?.u_id }}</td>\\r\\n    </tr>\\r\\n    <tr>\\r\\n      <th class=\\\"cyan lighten-4\\\">작성일</th>\\r\\n      <td>{{ qna?.q_date | date:'yyyy-MM-dd' }}</td>\\r\\n      <th class=\\\"cyan lighten-4\\\">답변여부</th>\\r\\n      <td [(ngModel)]=\\\"reply\\\" ngDefaultControl>{{ reply }}</td>\\r\\n    </tr>\\r\\n    <tr>\\r\\n      <td colspan=\\\"4\\\">\\r\\n        <pre>{{ qna?.q_content }}</pre>\\r\\n      </td>\\r\\n    </tr>\\r\\n    <tr *ngIf=\\\"reply !== 'N'\\\">\\r\\n      <th class=\\\"cyan lighten-4 align-middle\\\">답변 내용</th>\\r\\n      <td colspan=\\\"3\\\">\\r\\n        <pre>\\r\\n          {{ qna?.q_reply }}\\r\\n        </pre>\\r\\n      </td>\\r\\n    </tr>\\r\\n  </tbody>\\r\\n  <!--Table body-->\\r\\n\\r\\n</table>\\r\\n<!--Table-->\\r\\n\\r\\n<button type=\\\"button\\\" class=\\\"btn btn-outline-danger waves-effect\\\" (click)=\\\"deleteQna(qna?.q_no)\\\">\\r\\n  삭제\\r\\n</button>\\r\\n\\r\\n<button type=\\\"button\\\" class=\\\"btn btn-outline-info waves-effect\\\" id=\\\"qna_back_button\\\" [routerLink]=\\\"['/notice/qna']\\\">목록\\r\\n</button>\\r\\n\\r\\n<button type=\\\"button\\\" class=\\\"btn btn-outline-info waves-effect\\\" id=\\\"qna_update_button\\\" [routerLink]=\\\"['/notice/qna/update']\\\" (click)=\\\"setQnaObject()\\\">수정</button>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { HttpClientModule, HttpHeaders, HttpClient } from '@angular/common/http';\r\nimport { Router, ActivatedRoute } from \"@angular/router\";\r\n\r\nimport { QnaService } from '../../shared/services/qna.service';\r\nimport { Qna } from '../../shared/models/qna';\r\nimport { TokenService } from '../../shared/services/token.service';\r\n\r\n@Component({\r\n  selector: 'app-qna-detail',\r\n  templateUrl: './qna-detail.component.html',\r\n  styleUrls: ['./qna-detail.component.css']\r\n})\r\nexport class QnaDetailComponent implements OnInit {\r\n  qna: Qna;\r\n  reply = 'n';\r\n\r\n  constructor(\r\n    private qnaService: QnaService,\r\n    private http: HttpClient,\r\n    private router: Router,\r\n    private tokenService: TokenService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.qna = this.qnaService.getQnaObject();\r\n\r\n    if (this.qna == null) {\r\n      var q_no = this.tokenService.getToken(\"qnaDetailToken\")\r\n      var qnaList = this.tokenService.getToken(\"qnaToken\");\r\n      var qna = qnaList.find(function(item) {\r\n        return item.q_no === q_no;\r\n      });\r\n      var q_content = qna.q_content;\r\n      qna.q_content = qna.q_content.replace(\"\\r\\n\", \"<br>\");\r\n      this.qna = qna;\r\n    }\r\n\r\n    if(this.qna.q_reply == this.reply) {\r\n      this.reply = 'N';\r\n    } else {\r\n      this.reply = \"답변 완료\"\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n  setQnaObject() {\r\n    this.qnaService.setQnaObject(this.qna);\r\n  }\r\n\r\n  deleteQna(q_no: number) {\r\n    var confirm = window.confirm('질문을 삭제하시겠습니까?');\r\n    if (confirm) {\r\n      return this.qnaService.deleteQna(q_no)\r\n        .subscribe(() => {\r\n          alert(\"고객님의 질문이 삭제되었습니다.\");\r\n          // this.tokenService.removeToken(\"qnaToken\");\r\n          this.router.navigate([\"notice/qna\"]);\r\n        });\r\n    } else {\r\n      return;\r\n    }\r\n  }\r\n}\r\n","module.exports = \"tbody tr th {\\r\\n  text-align: center;\\r\\n  vertical-align: middle;\\r\\n  font-size: 17px;\\r\\n  font-weight: bold;\\r\\n  background-color: lightgray;\\r\\n}\\r\\n\\r\\ndiv button {\\r\\n  font-weight: bold;\\r\\n  font-size: 0.8em;\\r\\n}\\r\\n\"","module.exports = \"<hr class=\\\"between-sections\\\">\\r\\n\\r\\n<div class=\\\"card card-cascade wider reverse\\\">\\r\\n\\r\\n  <!-- Card content -->\\r\\n  <div class=\\\"card-body card-body-cascade text-center\\\">\\r\\n\\r\\n    <!-- Title -->\\r\\n    <h4 class=\\\"card-title\\\"><strong>1:1 질문하기</strong></h4>\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n\\r\\n<hr class=\\\"between-sections\\\">\\r\\n\\r\\n<!-- Default form contact -->\\r\\n<form name=\\\"updateForm\\\" #updateQnaForm=\\\"ngForm\\\" (ngSubmit)=\\\"updateQna(updateQnaForm)\\\">\\r\\n  <!--Table-->\\r\\n  <table class=\\\"table table-bordered\\\">\\r\\n    <!--Table body-->\\r\\n    <tbody>\\r\\n      <tr [hidden]=true>\\r\\n        <th>질문 번호</th>\\r\\n        <td>\\r\\n          <input type=\\\"text\\\" id=\\\"exampleForm2\\\" class=\\\"form-control\\\" required [(ngModel)]=\\\"qna.q_no\\\" [ngModelOptions]=\\\"{standalone: true}\\\" />\\r\\n        </td>\\r\\n      </tr>\\r\\n      <tr>\\r\\n        <th class=\\\"cyan lighten-4\\\">제목</th>\\r\\n        <td>\\r\\n          <input type=\\\"text\\\" id=\\\"exampleForm2\\\" class=\\\"form-control\\\" placeholder=\\\"제목을 입력해주세요.\\\"\\r\\n            required [(ngModel)]=\\\"qna.q_title\\\" [ngModelOptions]=\\\"{standalone: true}\\\" />\\r\\n        </td>\\r\\n      </tr>\\r\\n      <tr>\\r\\n        <th class=\\\"cyan lighten-4\\\">작성자 ID</th>\\r\\n        <td>\\r\\n          <input type=\\\"text\\\" id=\\\"exampleForm2\\\" class=\\\"form-control\\\" required [(ngModel)]=\\\"qna.u_id\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [disabled]=true/>\\r\\n        </td>\\r\\n      </tr>\\r\\n      <tr>\\r\\n        <th class=\\\"cyan lighten-4\\\">질문 내용</th>\\r\\n        <td colspan=\\\"2\\\">\\r\\n          <textarea name=\\\"qnaContent\\\" rows=\\\"8\\\" cols=\\\"150\\\" placeholder=\\\"내용을 입력해주세요.\\\" class=\\\"form-control\\\" required [(ngModel)]=\\\"qna.q_content\\\" [ngModelOptions]=\\\"{standalone: true}\\\"></textarea>\\r\\n        </td>\\r\\n      </tr>\\r\\n    </tbody>\\r\\n  </table>\\r\\n\\r\\n  <div class=\\\"text-center mt-4\\\">\\r\\n    <button type=\\\"submit\\\" class=\\\"btn btn-outline-danger waves-effect\\\">수정</button>\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-outline-info waves-effect\\\" [routerLink]=\\\"['/notice/qna']\\\">취소</button>\\r\\n  </div>\\r\\n</form>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { NgForm, FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\n\r\nimport { QnaService } from '../../shared/services/qna.service';\r\nimport { Qna } from '../../shared/models/qna';\r\n// import { TokenService } from '../../shared/services/token.service';\r\n\r\n@Component({\r\n  selector: 'app-qna-update',\r\n  templateUrl: './qna-update.component.html',\r\n  styleUrls: ['./qna-update.component.css']\r\n})\r\nexport class QnaUpdateComponent implements OnInit {\r\n  qna: Qna;\r\n\r\n  constructor(\r\n    private qnaService: QnaService,\r\n    private router: Router\r\n    // private tokenService: TokenService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.qna = this.qnaService.getQnaObject();\r\n\r\n    // if(this.qna == null) {\r\n    //   var q_no = this.tokenService.getToken(\"qnaDetailToken\");\r\n    //   var qnaList = this.tokenService.getToken(\"qnaToken\");\r\n    //   var qna = qnaList.find(function(item) {\r\n    //     return item.q_no == q_no;\r\n    //   });\r\n    //   this.qna = qna;\r\n    // }\r\n  }\r\n\r\n  updateQna(form: NgForm) {\r\n    this.qnaService.updateQna(this.qna)\r\n      .subscribe(() => {\r\n        alert(\"질문이 수정되었습니다.\");\r\n        // this.tokenService.removeToken(\"qnaToken\");\r\n        this.router.navigate([\"/notice/qna\"]);\r\n      });\r\n  }\r\n\r\n}\r\n","module.exports = \"tbody tr th {\\r\\n  text-align: center;\\r\\n  vertical-align: middle;\\r\\n  font-size: 17px;\\r\\n  font-weight: bold;\\r\\n  background-color: lightgray;\\r\\n}\\r\\n\"","module.exports = \"<hr class=\\\"between-sections\\\">\\r\\n\\r\\n<div class=\\\"card card-cascade wider reverse\\\">\\r\\n\\r\\n  <!-- Card content -->\\r\\n  <div class=\\\"card-body card-body-cascade text-center\\\">\\r\\n\\r\\n    <!-- Title -->\\r\\n    <h4 class=\\\"card-title\\\"><strong>1:1 질문하기</strong></h4>\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n\\r\\n<hr class=\\\"between-sections\\\">\\r\\n\\r\\n<!-- Default form contact -->\\r\\n<form (ngSubmit)=\\\"insertQna()\\\">\\r\\n  <!--Table-->\\r\\n  <table class=\\\"table table-bordered\\\">\\r\\n    <!--Table body-->\\r\\n    <tbody>\\r\\n      <tr>\\r\\n        <th class=\\\"cyan lighten-4\\\">제목</th>\\r\\n        <td>\\r\\n          <input type=\\\"text\\\" id=\\\"exampleForm2\\\" class=\\\"form-control\\\" placeholder=\\\"제목을 입력해주세요.\\\" required [(ngModel)]=\\\"qna.q_title\\\" [ngModelOptions]=\\\"{standalone: true}\\\" />\\r\\n        </td>\\r\\n      </tr>\\r\\n      <tr [hidden]=true>\\r\\n        <th class=\\\"cyan lighten-4\\\">작성자</th>\\r\\n        <td>\\r\\n          <input type=\\\"text\\\" id=\\\"exampleForm2\\\" class=\\\"form-control\\\" required [(ngModel)]=\\\"qna.u_id\\\" [ngModelOptions]=\\\"{standalone: true}\\\" />\\r\\n        </td>\\r\\n      </tr>\\r\\n      <tr>\\r\\n        <th colspan=\\\"1\\\">질문 내용</th>\\r\\n        <td colspan=\\\"2\\\">\\r\\n          <textarea name=\\\"qnaContent\\\" rows=\\\"8\\\" cols=\\\"150\\\" placeholder=\\\"내용을 입력해주세요.\\\" class=\\\"form-control\\\" required [(ngModel)]=\\\"qna.q_content\\\" [ngModelOptions]=\\\"{standalone: true}\\\"></textarea>\\r\\n        </td>\\r\\n      </tr>\\r\\n    </tbody>\\r\\n  </table>\\r\\n\\r\\n  <div class=\\\"text-center mt-4\\\" [hidden]=\\\"submit\\\">\\r\\n    <button type=\\\"submit\\\" class=\\\"btn btn-outline-danger waves-effect\\\">등록</button>\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-outline-info waves-effect\\\" [routerLink]=\\\"['/notice/qna']\\\">취소</button>\\r\\n  </div>\\r\\n</form>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { QnaService } from '../../shared/services/qna.service';\r\nimport { Qna } from '../../shared/models/qna';\r\nimport { AuthService } from '../../shared/services/auth.service';\r\nimport { User } from '../../shared/models/user';\r\n// import { TokenService } from '../../shared/services/token.service';\r\n\r\n@Component({\r\n  selector: 'app-qna-write',\r\n  templateUrl: './qna-write.component.html',\r\n  styleUrls: ['./qna-write.component.css']\r\n})\r\nexport class QnaWriteComponent implements OnInit {\r\n  submit = false;\r\n  qna = new Qna;\r\n  q_no: number;\r\n\r\n  constructor(\r\n    private qnaService: QnaService,\r\n    private router: Router,\r\n    private authService: AuthService\r\n    // private tokenService: TokenService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.qna.u_id = this.authService.getLoggedInUser().uid;\r\n  }\r\n\r\n  insertQna() {\r\n    this.qnaService.insertQna(this.qna)\r\n      .subscribe(() => {\r\n        alert(\"질문이 등록되었습니다.\");\r\n        // this.tokenService.removeToken(\"qnaToken\");\r\n        this.router.navigate([\"/notice/qna\"]);\r\n      });\r\n  }\r\n\r\n}\r\n"],"sourceRoot":""}